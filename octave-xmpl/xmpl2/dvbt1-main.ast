Program([FunDec(VarDef("dvbt"),[],[],Stats([VarDef("NET_PACKET_LENGTH"),Var("global_settings"),Assign(Var("input_file"),"=",Subscript(Var("fopen"),[String("./demo_head.mpg"),String("r")])),While(DataOp("!",[Subscript(Var("feof"),[Var("input_file")])]),Stats([Assign(Var("data_in"),"=",Int(1)),AssignMulti([Var("data_in"),Var("count")],"=",Subscript(Var("fread"),[Var("input_file"),Var("NET_PACKET_LENGTH")])),Subscript(Var("disp"),[Var("data_in")]),Ifs([ElseIf(DataOp("!=",[Var("count"),Int(0)]),Stats([Subscript(Var("fprintf"),[String("reading block of length %d\n"),Var("count")]),Ifs([ElseIf(DataOp("<",[Var("count"),Var("NET_PACKET_LENGTH")]),Stats([Assign(Var("data_in"),"=",Matrix([[Var("data_in")],[Subscript(Var("zeros"),[DataOp("-",[Var("NET_PACKET_LENGTH"),Var("count")]),Int(1)])]]))]))],()),Assign(Var("data_channel_in"),"=",Subscript(Var("dvbt_send"),[Var("data_in")])),Assign(Var("data_channel_out"),"=",Subscript(Var("channel_model"),[Var("data_channel_in")])),Assign(Var("data_out"),"=",Subscript(Var("dvbt_receive"),[Var("data_channel_out")])),Ifs([ElseIf(DataOp("==",[Var("data_in"),Var("data_out")]),Stats([Subscript(Var("fprintf"),[String("send&receive of %d bytes successful\n"),Subscript(Var("length"),[Var("data_in")])])]))],Else(Stats([Subscript(Var("fprintf"),[String("**error**\n")]),Return]))),Subscript(Var("fprintf"),[String("\n")])]))],())])),Subscript(Var("fclose"),[Var("input_file")])])),FunDec(VarDef("global_settings"),[],[],Stats([VarDef("PACKET_LENGTH"),VarDef("NET_PACKET_LENGTH"),VarDef("PACKETS_PER_PRBS_PERIOD"),VarDef("SYNC_BYTE_VALUE"),VarDef("INV_SYNC_BYTE_VALUE"),VarDef("INIT_PRBS_REGISTER"),VarDef("RS_PARITY_BYTES"),VarDef("OI_I"),VarDef("OI_M"),VarDef("INIT_CONV_REGISTER"),VarDef("PUNCTURING_MODE"),VarDef("QAM_MODE"),VarDef("LOG_QAM_MODE"),Assign(Var("ffffffff"),"=",Subscript(Var("flipud"),[Matrix([[Int(1),Int(2)]])])),Assign(Var("rrrrrrrr"),"=",Subscript(Var("rows"),[Matrix([[Int(1),Int(2)]])])),Assign(Var("ffxxxxxx"),"=",Subscript(Var("diff"),[Matrix([[Int(1),Int(2),Int(8)]]),Int(1)])),Assign(Var("PACKETS_PER_PRBS_PERIOD"),"=",Int(8)),Assign(Var("PACKET_LENGTH"),"=",Int(188)),Assign(Var("NET_PACKET_LENGTH"),"=",DataOp("-",[Var("PACKET_LENGTH"),Int(1)])),Assign(Var("SYNC_BYTE_VALUE"),"=",Subscript(Var("hex2dec"),[String("47")])),Assign(Var("INV_SYNC_BYTE_VALUE"),"=",Subscript(Var("hex2dec"),[String("b8")])),Assign(Var("INIT_PRBS_REGISTER"),"=",Matrix([[Int(1),Int(0),Int(0),Int(1),Int(0),Int(1),Int(0),Int(1),Int(0),Int(0),Int(0),Int(0),Int(0),Int(0),Int(0)]])),Assign(Var("RS_PARITY_BYTES"),"=",Int(16)),Assign(Var("OI_I"),"=",Int(12)),Assign(Var("OI_M"),"=",Int(17)),Assign(Var("INIT_CONV_REGISTER"),"=",Subscript(Var("zeros"),[Int(1),Int(6)])),Assign(Var("PUNCTURING_MODE"),"=",Float(6.666666865348816e-01)),Assign(Var("QAM_MODE"),"=",Int(16)),Assign(Var("LOG_QAM_MODE"),"=",Subscript(Var("log2"),[Var("QAM_MODE")]))])),FunDec(VarDef("flipud"),[VarDef("x")],[VarDef("y")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("flipud (x)")])]))],()),Assign(Var("nr"),"=",Subscript(Var("rows"),[Var("x")])),Assign(Var("y"),"=",Subscript(Var("x"),[Range(Var("nr"),Int(-1),Int(1)),Colon]))])),FunDec(VarDef("rows"),[VarDef("x")],[VarDef("nr")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("rows (x)")])]))],()),AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")]))])),FunDec(VarDef("diff"),[VarDef("x"),VarDef("k")],[VarDef("x")],Stats([Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Assign(Var("k"),"=",Int(1))])),ElseIf(DataOp("==",[Var("nargin"),Int(2)]),Stats([Ifs([ElseIf(DataOp("!",[DataOp("&&",[DataOp("&&",[Subscript(Var("is_scalar"),[Var("k")]),DataOp("==",[Var("k"),Subscript(Var("round"),[Var("k")])])]),DataOp(">=",[Var("k"),Int(0)])])]),Stats([Subscript(Var("error"),[String("diff: k must be a nonnegative integer")])])),ElseIf(DataOp("==",[Var("k"),Int(0)]),Stats([Return]))],())]))],Else(Stats([Subscript(Var("usage"),[String("diff (x, k")])]))),Ifs([ElseIf(Subscript(Var("isstr"),[Var("x")]),Stats([Subscript(Var("error"),[String("diff: symbolic differentiation not (yet) supported")])])),ElseIf(Subscript(Var("is_vector"),[Var("x")]),Stats([Assign(Var("n"),"=",Subscript(Var("length"),[Var("x")])),Ifs([ElseIf(DataOp("<=",[Var("n"),Var("k")]),Stats([Assign(Var("x"),"=",Matrix([]))]))],Else(Stats([For(VarDef("i"),Range(Int(1),Int(1),Var("k")),Stats([Assign(Var("x"),"=",DataOp("-",[Subscript(Var("x"),[Range(Int(2),Int(1),DataOp("+",[DataOp("-",[Var("n"),Var("i")]),Int(1)]))]),Subscript(Var("x"),[Range(Int(1),Int(1),DataOp("-",[Var("n"),Var("i")]))])]))]))])))])),ElseIf(Subscript(Var("is_matrix"),[Var("x")]),Stats([Assign(Var("n"),"=",Subscript(Var("rows"),[Var("x")])),Ifs([ElseIf(DataOp("<=",[Var("n"),Var("k")]),Stats([Assign(Var("x"),"=",Matrix([]))]))],Else(Stats([For(VarDef("i"),Range(Int(1),Int(1),Var("k")),Stats([Assign(Var("x"),"=",DataOp("-",[Subscript(Var("x"),[Range(Int(2),Int(1),DataOp("+",[DataOp("-",[Var("n"),Var("i")]),Int(1)])),Colon]),Subscript(Var("x"),[Range(Int(1),Int(1),DataOp("-",[Var("n"),Var("i")])),Colon])]))]))])))]))],Else(Stats([Assign(Var("x"),"=",Matrix([]))])))])),FunDec(VarDef("is_scalar"),[VarDef("x")],[VarDef("retval")],Stats([Assign(Var("retval"),"=",Int(0)),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Ifs([ElseIf(Subscript(Var("is_matrix"),[Var("x")]),Stats([AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")])),Assign(Var("retval"),"=",DataOp("&&",[DataOp("==",[Var("nr"),Int(1)]),DataOp("==",[Var("nc"),Int(1)])]))]))],())]))],Else(Stats([Subscript(Var("usage"),[String("is_scalar (x)")])])))])),FunDec(VarDef("is_vector"),[VarDef("x")],[VarDef("retval")],Stats([Assign(Var("retval"),"=",Int(0)),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Ifs([ElseIf(Subscript(Var("is_matrix"),[Var("x")]),Stats([AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")])),Assign(Var("retval"),"=",DataOp("||",[DataOp("&&",[DataOp("==",[Var("nr"),Int(1)]),DataOp(">=",[Var("nc"),Int(1)])]),DataOp("&&",[DataOp("==",[Var("nc"),Int(1)]),DataOp(">=",[Var("nr"),Int(1)])])]))]))],())]))],Else(Stats([Subscript(Var("usage"),[String("is_vector (x)")])])))])),FunDec(VarDef("hex2dec"),[VarDef("h")],[VarDef("d")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("hex2dec (b)")])]))],Else(Stats([Assign(Var("d"),"=",Subscript(Var("base2dec"),[Var("h"),Int(16)]))])))])),FunDec(VarDef("base2dec"),[VarDef("d"),VarDef("base")],[VarDef("out")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(2)]),Stats([Subscript(Var("usage"),[String("n = base2dec('d', base)")])]))],()),Assign(Var("symbols"),"=",String("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ")),Ifs([ElseIf(Subscript(Var("isstr"),[Var("base")]),Stats([Assign(Var("symbols"),"=",Var("base")),Assign(Var("base"),"=",Subscript(Var("length"),[Var("symbols")])),Ifs([ElseIf(Subscript(Var("any"),[DataOp("==",[Subscript(Var("diff"),[Subscript(Var("sort"),[Subscript(Var("toascii"),[Var("symbols")])])]),Int(0)])]),Stats([Subscript(Var("error"),[String("base2dec: symbols representing digits must be unique.")])]))],())])),ElseIf(DataOp("!",[Subscript(Var("is_scalar"),[Var("base")])]),Stats([Subscript(Var("error"),[String("base2dec: cannot convert from several bases at once.")])])),ElseIf(DataOp("||",[DataOp("<",[Var("base"),Int(2)]),DataOp(">",[Var("base"),Subscript(Var("length"),[Var("symbols")])])]),Stats([Subscript(Var("error"),[String("base2dec: base must be between 2 and 36 or a string of symbols")])]))],Else(Stats([Assign(Var("d"),"=",Subscript(Var("toupper"),[Var("d")]))]))),Assign(Var("d"),"=",Subscript(Var("strjust"),[Var("d"),String("right")])),Assign(Var("table"),"=",DataOp("*",[Var("NaN"),Subscript(Var("ones"),[Int(256),Int(1)])])),Assign(Subscript(Var("table"),[Subscript(Var("toascii"),[Subscript(Var("symbols"),[Range(Int(1),Int(1),Var("base"))])])]),"=",Range(Int(0),Int(1),DataOp("-",[Var("base"),Int(1)]))),Assign(Subscript(Var("table"),[Subscript(Var("toascii"),[String(" ")])]),"=",Int(0)),Assign(Var("d"),"=",Subscript(Var("reshape"),[Subscript(Var("table"),[Subscript(Var("toascii"),[Var("d")])]),Subscript(Var("size"),[Var("d")])])),Assign(Var("out"),"=",DataOp("*",[Var("d"),DataOp(".^",[Var("base"),DataOp("'",[Range(DataOp("-",[Subscript(Var("columns"),[Var("d")]),Int(1)]),Int(-1),Int(0))])])]))])),FunDec(VarDef("strjust"),[VarDef("x"),VarDef("just")],[VarDef("x")],Stats([Ifs([ElseIf(DataOp("||",[DataOp("<",[Var("nargin"),Int(1)]),DataOp(">",[Var("nargin"),Int(2)])]),Stats([Subscript(Var("usage"),[String("strjust (s, ['left'|'right'|'center'])")])]))],()),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Assign(Var("just"),"=",String("right"))]))],()),Assign(Var("just"),"=",Subscript(Var("tolower"),[Var("just")])),Assign(Var("dfi"),"=",Var("do_fortran_indexing")),UnwindProtect(Stats([Assign(Var("do_fortran_indexing"),"=",Int(1)),Assign(Var("idx"),"=",Subscript(Var("find"),[DataOp("==",[Subscript(Var("toascii"),[Var("x")]),Int(0)])])),Ifs([ElseIf(DataOp("!",[Subscript(Var("isempty"),[Var("idx")])]),Stats([Assign(Subscript(Var("x"),[Var("idx")]),"=",String(" "))]))],()),AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")])),Assign(Var("idx"),"=",DataOp("!=",[DataOp("'",[Var("x")]),String(" ")])),Ifs([ElseIf(Subscript(Var("strcmp"),[Var("just"),String("right")]),Stats([AssignMulti([Var("N"),Var("hi")],"=",Subscript(Var("max"),[Subscript(Var("cumsum"),[Var("idx")])])),Assign(Var("shift"),"=",Var("hi"))])),ElseIf(Subscript(Var("strcmp"),[Var("just"),String("left")]),Stats([AssignMulti([Var("N"),Var("lo")],"=",Subscript(Var("max"),[Subscript(Var("cumsum"),[Subscript(Var("flipud"),[Var("idx")])])])),Assign(Var("shift"),"=",DataOp("-",[Var("nc"),Var("lo")]))]))],Else(Stats([AssignMulti([Var("N"),Var("hi")],"=",Subscript(Var("max"),[Subscript(Var("cumsum"),[Var("idx")])])),AssignMulti([Var("N"),Var("lo")],"=",Subscript(Var("max"),[Subscript(Var("cumsum"),[Subscript(Var("flipud"),[Var("idx")])])])),Assign(Var("shift"),"=",Subscript(Var("ceil"),[DataOp("-",[Var("nc"),DataOp("/",[DataOp("-",[Var("lo"),Var("hi")]),Int(2)])])]))]))),Assign(Var("idx"),"=",Subscript(Var("rem"),[DataOp("+",[DataOp("*",[Subscript(Var("ones"),[Var("nr"),Int(1)]),Matrix([[Range(Int(0),Int(1),DataOp("-",[Var("nc"),Int(1)]))]])]),DataOp("*",[DataOp("'",[Var("shift")]),Subscript(Var("ones"),[Int(1),Var("nc")])])]),Var("nc")])),Assign(Var("x"),"=",Subscript(Var("x"),[DataOp("+",[DataOp("*",[Var("idx"),Var("nr")]),DataOp("*",[DataOp("'",[Matrix([[Range(Int(1),Int(1),Var("nr"))]])]),Subscript(Var("ones"),[Int(1),Var("nc")])])])]))]),Stats([Assign(Var("do_fortran_indexing"),"=",Var("dfi"))]))])),FunDec(VarDef("strcmp"),[VarDef("s1"),VarDef("s2")],[VarDef("status")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(2)]),Stats([Subscript(Var("usage"),[String("strcmp (s, t)")])]))],()),Assign(Var("status"),"=",Int(0)),Ifs([ElseIf(DataOp("&&",[Subscript(Var("isstr"),[Var("s1")]),Subscript(Var("isstr"),[Var("s2")])]),Stats([AssignMulti([Var("r1"),Var("c1")],"=",Subscript(Var("size"),[Var("s1")])),AssignMulti([Var("r2"),Var("c2")],"=",Subscript(Var("size"),[Var("s2")])),Ifs([ElseIf(DataOp("&&",[DataOp("==",[Var("r1"),Var("r2")]),DataOp("==",[Var("c1"),Var("c2")])]),Stats([Ifs([ElseIf(DataOp("==",[Var("c1"),Int(0)]),Stats([Assign(Var("status"),"=",Int(1))]))],Else(Stats([Assign(Var("status"),"=",Subscript(Var("all"),[Subscript(Var("all"),[DataOp("==",[Var("s1"),Var("s2")])])]))])))]))],())]))],())])),FunDec(VarDef("rem"),[VarDef("x"),VarDef("y")],[VarDef("retval")],Stats([Assign(Var("usage_msg"),"=",String("rem (x, y)")),Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(2)]),Stats([Subscript(Var("usage"),[Var("usage_msg")])]))],()),Ifs([ElseIf(DataOp("&&",[Subscript(Var("any"),[DataOp("!=",[Subscript(Var("size"),[Var("x")]),Subscript(Var("size"),[Var("y")])])]),DataOp("!",[DataOp("||",[Subscript(Var("is_scalar"),[Var("x")]),Subscript(Var("is_scalar"),[Var("y")])])])]),Stats([Subscript(Var("error"),[String("rem: argument sizes must agree")])]))],()),Ifs([ElseIf(DataOp("||",[Subscript(Var("any"),[Subscript(Var("any"),[Subscript(Var("imag"),[Var("x")])])]),Subscript(Var("any"),[Subscript(Var("any"),[Subscript(Var("imag"),[Var("y")])])])]),Stats([Subscript(Var("error"),[String("rem: complex arguments are not allowed")])]))],()),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(2)]),Stats([Assign(Var("retval"),"=",DataOp("-",[Var("x"),DataOp(".*",[Var("y"),Subscript(Var("fix"),[DataOp("./",[Var("x"),Var("y")])])])]))]))],Else(Stats([Subscript(Var("error"),[Var("usage_msg")])])))])),FunDec(VarDef("reshape"),[VarDef("a"),VarDef("m"),VarDef("n")],[VarDef("retval")],Stats([Ifs([ElseIf(DataOp("&&",[DataOp("==",[Var("nargin"),Int(2)]),DataOp("==",[Subscript(Var("prod"),[Subscript(Var("size"),[Var("m")])]),Int(2)])]),Stats([Assign(Var("n"),"=",Subscript(Var("m"),[Int(2)])),Assign(Var("m"),"=",Subscript(Var("m"),[Int(1)])),Assign(Var("nargin"),"=",Int(3))]))],()),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(3)]),Stats([AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("a")])),Ifs([ElseIf(DataOp("==",[DataOp("*",[Var("nr"),Var("nc")]),DataOp("*",[Var("m"),Var("n")])]),Stats([Assign(Var("retval"),"=",Subscript(Var("zeros"),[Var("m"),Var("n")])),Ifs([ElseIf(Subscript(Var("isstr"),[Var("a")]),Stats([Assign(Var("retval"),"=",Subscript(Var("setstr"),[Var("retval")]))]))],()),Assign(Subscript(Var("retval"),[Colon]),"=",Var("a"))]))],Else(Stats([Subscript(Var("error"),[String("reshape: sizes must match")])])))]))],Else(Stats([Subscript(Var("usage"),[String("reshape (a, m, n) or reshape (a, size (b))")])])))])),FunDec(VarDef("columns"),[VarDef("x")],[VarDef("nc")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("columns (x)")])]))],()),AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")]))])),FunDec(VarDef("log2"),[VarDef("x")],[VarDef("f"),VarDef("e")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("y = log2 (x) or [f, e] = log2 (x)")])]))],()),Ifs([ElseIf(DataOp("<",[Var("nargout"),Int(2)]),Stats([Assign(Var("f"),"=",DataOp("/",[Subscript(Var("log"),[Var("x")]),Subscript(Var("log"),[Int(2)])]))])),ElseIf(DataOp("==",[Var("nargout"),Int(2)]),Stats([Assign(Var("x"),"=",Subscript(Var("real"),[Var("x")])),Assign(Var("f"),"=",DataOp("+",[Subscript(Var("abs"),[Var("x")]),DataOp("==",[Var("x"),Int(0)])])),Assign(Var("e"),"=",DataOp(".*",[DataOp("+",[Subscript(Var("floor"),[DataOp("/",[Subscript(Var("log"),[Var("f")]),Subscript(Var("log"),[Int(2)])])]),Int(1)]),DataOp("!=",[Var("x"),Int(0)])])),Assign(Var("f"),"=",DataOp("./",[DataOp(".*",[Subscript(Var("sign"),[Var("x")]),Var("f")]),DataOp(".^",[Int(2),Var("e")])]))]))],Else(Stats([Subscript(Var("error"),[String("log2 takes at most 2 output arguments")])])))])),FunDec(VarDef("dvbt_send"),[VarDef("data_in")],[VarDef("data_channel_in")],Stats([Subscript(Var("fprintf"),[String("  dvbt_send (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("PACKETS_PER_PRBS_PERIOD"),VarDef("dvbt_send_current_packet"),VarDef("dvbt_send_prbs_register"),VarDef("dvbt_send_conv_regigster"),Assign(Var("dvbt_send_current_packet"),"=",Int(0)),Assign(Var("data"),"=",Var("data_in")),Assign(Var("data"),"=",Subscript(Var("sync_and_scramble"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("rs_encode"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("outer_interleave"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("bit_from_byte_vector"),[Var("data")])),AssignMulti([Var("x"),Var("y")],"=",Subscript(Var("convolutional_encode"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("puncturing"),[Var("x"),Var("y")])),Assign(Var("data_channel_in"),"=",Var("data")),Assign(Var("dvbt_send_current_packet"),"=",Subscript(Var("rem"),[DataOp("+",[Var("dvbt_send_current_packet"),Int(1)]),Var("PACKETS_PER_PRBS_PERIOD")]))])),FunDec(VarDef("sync_and_scramble"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    sync_and_scramble (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("PACKET_LENGTH"),VarDef("NET_PACKET_LENGTH"),VarDef("PACKETS_PER_PRBS_PERIOD"),VarDef("SYNC_BYTE_VALUE"),VarDef("INV_SYNC_BYTE_VALUE"),VarDef("INIT_PRBS_REGISTER"),VarDef("dvbt_send_current_packet"),VarDef("dvbt_send_prbs_register"),VarDef("dvbt_send_convolution_state"),Ifs([ElseIf(DataOp("==",[Var("dvbt_send_current_packet"),Int(0)]),Stats([Assign(Var("dvbt_send_prbs_register"),"=",Var("INIT_PRBS_REGISTER")),Assign(Var("sync_byte"),"=",Var("INV_SYNC_BYTE_VALUE"))]))],Else(Stats([Subscript(Var("dvbt_send_current_packet"),[Int(1)]),Assign(Var("sync_byte"),"=",Var("SYNC_BYTE_VALUE"))]))),AssignMulti([Var("prbs"),Var("dvbt_send_prbs_register")],"=",Subscript(Var("prbs_sequence"),[Var("NET_PACKET_LENGTH"),Var("dvbt_send_prbs_register")])),Assign(Var("data_out"),"=",Matrix([[Var("sync_byte")],[Subscript(Var("byte_xor"),[Var("data_in"),Var("prbs")])]]))])),FunDec(VarDef("prbs_sequence"),[VarDef("byte_length"),VarDef("prbs_register")],[VarDef("sequence"),VarDef("prbs_register_out")],Stats([Subscript(Var("fprintf"),[String("      prbs_sequence\n")]),Assign(Var("bit_length"),"=",DataOp("*",[Int(8),Var("byte_length")])),Assign(Var("bit_sequence"),"=",Subscript(Var("zeros"),[Var("bit_length"),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Var("bit_length")),Stats([Assign(Var("new_bit"),"=",Subscript(Var("xor"),[Subscript(Var("prbs_register"),[Int(14)]),Subscript(Var("prbs_register"),[Int(15)])])),Assign(Var("prbs_register"),"=",Matrix([[Var("new_bit"),Subscript(Var("prbs_register"),[Range(Int(1),Int(1),Int(14))])]])),Assign(Subscript(Var("bit_sequence"),[Var("i")]),"=",Var("new_bit"))])),Assign(Var("sequence"),"=",Subscript(Var("zeros"),[Var("byte_length"),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Var("byte_length")),Stats([For(VarDef("j"),Range(Int(1),Int(1),Int(8)),Stats([Assign(Subscript(Var("sequence"),[Var("i")]),"=",DataOp("+",[Subscript(Var("sequence"),[Var("i")]),DataOp("*",[Subscript(Var("bit_sequence"),[DataOp("+",[DataOp("*",[Int(8),DataOp("-",[Var("i"),Int(1)])]),Var("j")])]),DataOp("^",[Int(2),DataOp("-",[Int(8),Var("j")])])])]))]))])),Assign(Var("prbs_register_out"),"=",Var("prbs_register"))])),FunDec(VarDef("xor"),[VarDef("x"),VarDef("y")],[VarDef("z")],Stats([Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(2)]),Stats([Ifs([ElseIf(DataOp("||",[DataOp("||",[Subscript(Var("is_scalar"),[Var("x")]),Subscript(Var("is_scalar"),[Var("y")])]),DataOp("==",[Subscript(Var("size"),[Var("x")]),Subscript(Var("size"),[Var("y")])])]),Stats([Assign(Var("z"),"=",Subscript(Var("logical"),[DataOp("-",[DataOp("|",[Var("x"),Var("y")]),DataOp("&",[Var("x"),Var("y")])])]))]))],Else(Stats([Subscript(Var("error"),[String("xor: x and y must be of common size or scalars")])])))]))],Else(Stats([Subscript(Var("usage"),[String("xor (x, y)")])])))])),FunDec(VarDef("logical"),[VarDef("x")],[VarDef("y")],Stats([Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Ifs([ElseIf(DataOp("||",[Subscript(Var("islogical"),[Var("x")]),Subscript(Var("isempty"),[Var("x")])]),Stats([Assign(Var("y"),"=",Var("x"))])),ElseIf(Subscript(Var("isnumeric"),[Var("x")]),Stats([Assign(Var("y"),"=",DataOp("!=",[Var("x"),Int(0)]))]))],Else(Stats([Subscript(Var("error"),[String("logical not defined for type `%s'"),Subscript(Var("typeinfo"),[Var("x")])])])))]))],Else(Stats([Subscript(Var("usage"),[String("logical (x)")])])))])),FunDec(VarDef("byte_xor"),[VarDef("byte_vector1"),VarDef("byte_vector2")],[VarDef("result")],Stats([Subscript(Var("fprintf"),[String("      byte_xor\n")]),Assign(Var("result"),"=",Var("byte_vector1")),For(VarDef("i"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("byte_vector1")])),Stats([Assign(Var("byte1"),"=",Subscript(Var("byte_vector1"),[Var("i")])),Assign(Var("byte2"),"=",Subscript(Var("byte_vector2"),[Var("i")])),Assign(Var("result_byte"),"=",Int(0)),For(VarDef("j"),Range(Int(1),Int(1),Int(8)),Stats([Assign(Var("bit1"),"=",Subscript(Var("rem"),[Var("byte1"),Int(2)])),Assign(Var("bit2"),"=",Subscript(Var("rem"),[Var("byte2"),Int(2)])),Assign(Var("result_bit"),"=",Subscript(Var("xor"),[Var("bit1"),Var("bit2")])),Assign(Var("result_byte"),"=",DataOp("+",[Var("result_byte"),DataOp("*",[Var("result_bit"),DataOp("^",[Int(2),DataOp("-",[Var("j"),Int(1)])])])])),Assign(Var("byte1"),"=",Subscript(Var("fix"),[DataOp("/",[Var("byte1"),Int(2)])])),Assign(Var("byte2"),"=",Subscript(Var("fix"),[DataOp("/",[Var("byte2"),Int(2)])]))])),Assign(Subscript(Var("result"),[Var("i")]),"=",Var("result_byte"))]))])),FunDec(VarDef("rs_encode"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    rs_encode (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("PACKET_LENGTH"),VarDef("RS_PARITY_BYTES"),Ifs([ElseIf(DataOp("!=",[Subscript(Var("length"),[Var("data_in")]),Var("PACKET_LENGTH")]),Stats([Subscript(Var("fprintf"),[String("error: rs_endcode: packet size %d is not expected %d.\n"),Subscript(Var("length"),[Var("data_in")]),Var("PACKET_LENGTH")]),Return]))],()),Assign(Var("data_out"),"=",Matrix([[Var("data_in")],[Subscript(Var("zeros"),[Var("RS_PARITY_BYTES"),Int(1)])]]))])),FunDec(VarDef("outer_interleave"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    outer_interleave (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("PACKET_LENGTH"),VarDef("RS_PARITY_BYTES"),VarDef("OI_I"),VarDef("OI_M"),Assign(Var("data"),"=",Subscript(Var("reshape"),[Var("data_in"),Var("OI_I"),Var("OI_M")])),Assign(Var("data_out"),"=",Subscript(Var("reshape"),[DataOp(".'",[Var("data")]),DataOp("+",[Var("PACKET_LENGTH"),Var("RS_PARITY_BYTES")]),Int(1)]))])),FunDec(VarDef("bit_from_byte_vector"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    bit_from_byte_vector (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),Assign(Var("data_out"),"=",Subscript(Var("zeros"),[DataOp("*",[Subscript(Var("length"),[Var("data_in")]),Int(8)]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("data_in")])),Stats([Assign(Var("data_byte"),"=",Subscript(Var("data_in"),[Var("i")])),For(VarDef("j"),Range(Int(1),Int(1),Int(8)),Stats([Ifs([ElseIf(DataOp(">=",[Var("data_byte"),Float(1.275000000000000e+02)]),Stats([Assign(Subscript(Var("data_out"),[DataOp("+",[DataOp("*",[Int(8),DataOp("-",[Var("i"),Int(1)])]),Var("j")])]),"=",Int(1))]))],()),Assign(Var("data_byte"),"=",DataOp("*",[Subscript(Var("rem"),[Var("data_byte"),Int(128)]),Int(2)]))]))]))])),FunDec(VarDef("convolutional_encode"),[VarDef("data")],[VarDef("x"),VarDef("y")],Stats([Subscript(Var("fprintf"),[String("    convolutional_encode (%d)\n"),Subscript(Var("length"),[Var("data")])]),VarDef("INIT_CONV_REGISTER"),VarDef("dvbt_send_current_packet"),VarDef("dvbt_send_conv_register"),Ifs([ElseIf(DataOp("==",[Var("dvbt_send_current_packet"),Int(0)]),Stats([Assign(Var("dvbt_send_conv_register"),"=",Var("INIT_CONV_REGISTER"))]))],()),Assign(Var("x"),"=",Subscript(Var("zeros"),[Subscript(Var("length"),[Var("data")]),Int(1)])),Assign(Var("y"),"=",Subscript(Var("zeros"),[Subscript(Var("length"),[Var("data")]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("data")])),Stats([Assign(Var("data_in"),"=",Subscript(Var("data"),[Var("i")])),Assign(Subscript(Var("x"),[Var("i")]),"=",Var("data_in")),For(VarDef("j"),Matrix([[Int(1),Int(2),Int(3),Int(6)]]),Stats([Assign(Subscript(Var("x"),[Var("i")]),"=",Subscript(Var("xor"),[Subscript(Var("x"),[Var("i")]),Subscript(Var("dvbt_send_conv_register"),[Var("j")])]))])),Assign(Subscript(Var("y"),[Var("i")]),"=",Var("data_in")),For(VarDef("j"),Matrix([[Int(2),Int(3),Int(5),Int(6)]]),Stats([Assign(Subscript(Var("y"),[Var("i")]),"=",Subscript(Var("xor"),[Subscript(Var("y"),[Var("i")]),Subscript(Var("dvbt_send_conv_register"),[Var("j")])]))])),Assign(Var("dvbt_send_conv_register"),"=",Matrix([[Var("data_in"),Subscript(Var("dvbt_send_conv_register"),[Range(Int(2),Int(1),Int(6))])]]))]))])),FunDec(VarDef("puncturing"),[VarDef("x"),VarDef("y")],[VarDef("data")],Stats([Subscript(Var("fprintf"),[String("    puncturing (%d)\n"),Subscript(Var("length"),[Var("x")])]),VarDef("PUNCTURING_MODE"),Switch(Var("PUNCTURING_MODE"),[Case(Float(5.000000000000000e-01),Stats([Assign(Var("data"),"=",Subscript(Var("zeros"),[DataOp("*",[Int(2),Subscript(Var("length"),[Var("x")])]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("x")])),Stats([Assign(Subscript(Var("data"),[DataOp("+",[DataOp("*",[Int(2),DataOp("-",[Var("i"),Int(1)])]),Int(1)])]),"=",Subscript(Var("x"),[Var("i")])),Assign(Subscript(Var("data"),[DataOp("+",[DataOp("*",[Int(2),DataOp("-",[Var("i"),Int(1)])]),Int(2)])]),"=",Subscript(Var("y"),[Var("i")]))]))])),Case(Float(6.666666865348816e-01),Stats([Assign(Var("data"),"=",Subscript(Var("zeros"),[DataOp("/",[DataOp("*",[Int(3),Subscript(Var("length"),[Var("x")])]),Int(2)]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(2),Subscript(Var("length"),[Var("x")])),Stats([Assign(Subscript(Var("data"),[DataOp("+",[DataOp("/",[DataOp("*",[Int(3),DataOp("-",[Var("i"),Int(1)])]),Int(2)]),Int(1)])]),"=",Subscript(Var("x"),[Var("i")])),Assign(Subscript(Var("data"),[DataOp("+",[DataOp("/",[DataOp("*",[Int(3),DataOp("-",[Var("i"),Int(1)])]),Int(2)]),Int(2)])]),"=",Subscript(Var("y"),[Var("i")])),Assign(Subscript(Var("data"),[DataOp("+",[DataOp("/",[DataOp("*",[Int(3),DataOp("-",[Var("i"),Int(1)])]),Int(2)]),Int(3)])]),"=",Subscript(Var("y"),[DataOp("+",[Var("i"),Int(1)])]))]))]))],Stats([Stats([Subscript(Var("fprintf"),[String("puncturing mode %g not implemented.\n"),Var("PUNCTURING_MODE")]),Return])]))])),FunDec(VarDef("channel_model"),[VarDef("data_channel_in")],[VarDef("data_channel_out")],Stats([Subscript(Var("fprintf"),[String("  channel_model (%d)\n"),Subscript(Var("length"),[Var("data_channel_in")])]),Assign(Var("data_channel_out"),"=",Var("data_channel_in"))])),FunDec(VarDef("dvbt_receive"),[VarDef("data_channel_out")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("  dvbt_receive (%d)\n"),Subscript(Var("length"),[Var("data_channel_out")])]),VarDef("PACKETS_PER_PRBS_PERIOD"),VarDef("dvbt_receive_current_packet"),VarDef("dvbt_receive_prbs_register"),VarDef("dvbt_receive_conv_regigster"),Assign(Var("dvbt_receive_current_packet"),"=",Int(0)),Assign(Var("data"),"=",Var("data_channel_out")),AssignMulti([Var("x"),Var("y")],"=",Subscript(Var("depuncturing"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("convolutional_decode"),[Var("x"),Var("y")])),Assign(Var("data"),"=",Subscript(Var("byte_from_bit_vector"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("outer_deinterleave"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("rs_decode"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("remove_sync_and_unscramble"),[Var("data")])),Assign(Var("data_out"),"=",Var("data")),Assign(Var("dvbt_receive_current_packet"),"=",Subscript(Var("rem"),[DataOp("+",[Var("dvbt_receive_current_packet"),Int(1)]),Var("PACKETS_PER_PRBS_PERIOD")]))])),FunDec(VarDef("depuncturing"),[VarDef("data")],[VarDef("x"),VarDef("y")],Stats([Subscript(Var("fprintf"),[String("    depuncturing (%d)\n"),Subscript(Var("length"),[Var("data")])]),VarDef("PUNCTURING_MODE"),Switch(Var("PUNCTURING_MODE"),[Case(Float(5.000000000000000e-01),Stats([Assign(Var("x"),"=",Subscript(Var("zeros"),[DataOp("/",[Subscript(Var("length"),[Var("data")]),Int(2)]),Int(1)])),Assign(Var("y"),"=",Subscript(Var("zeros"),[DataOp("/",[Subscript(Var("length"),[Var("data")]),Int(2)]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("x")])),Stats([Assign(Subscript(Var("x"),[Var("i")]),"=",Subscript(Var("data"),[DataOp("+",[DataOp("*",[Int(2),DataOp("-",[Var("i"),Int(1)])]),Int(1)])])),Assign(Subscript(Var("y"),[Var("i")]),"=",Subscript(Var("data"),[DataOp("+",[DataOp("*",[Int(2),DataOp("-",[Var("i"),Int(1)])]),Int(2)])]))]))])),Case(Float(6.666666865348816e-01),Stats([Assign(Var("x"),"=",Subscript(Var("zeros"),[DataOp("/",[DataOp("*",[Int(2),Subscript(Var("length"),[Var("data")])]),Int(3)]),Int(1)])),Assign(Var("y"),"=",Subscript(Var("zeros"),[DataOp("/",[DataOp("*",[Int(2),Subscript(Var("length"),[Var("data")])]),Int(3)]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(2),Subscript(Var("length"),[Var("x")])),Stats([Assign(Subscript(Var("x"),[DataOp("+",[Var("i"),Int(0)])]),"=",Subscript(Var("data"),[DataOp("+",[DataOp("/",[DataOp("*",[Int(3),DataOp("-",[Var("i"),Int(1)])]),Int(2)]),Int(1)])])),Assign(Subscript(Var("x"),[DataOp("+",[Var("i"),Int(1)])]),"=",Float(5.000000000000000e-01)),Assign(Subscript(Var("y"),[DataOp("+",[Var("i"),Int(0)])]),"=",Subscript(Var("data"),[DataOp("+",[DataOp("/",[DataOp("*",[Int(3),DataOp("-",[Var("i"),Int(1)])]),Int(2)]),Int(2)])])),Assign(Subscript(Var("y"),[DataOp("+",[Var("i"),Int(1)])]),"=",Subscript(Var("data"),[DataOp("+",[DataOp("/",[DataOp("*",[Int(3),DataOp("-",[Var("i"),Int(1)])]),Int(2)]),Int(3)])]))]))]))],Stats([Stats([Subscript(Var("fprintf"),[String("puncturing mode %g not implemented.\n"),Var("PUNCTURING_MODE")]),Return])]))])),FunDec(VarDef("convolutional_decode"),[VarDef("x"),VarDef("y")],[VarDef("data")],Stats([Subscript(Var("fprintf"),[String("    convolutional_decode (%d)\n"),Subscript(Var("length"),[Var("x")])]),VarDef("INIT_CONV_REGISTER"),VarDef("dvbt_receive_current_packet"),VarDef("dvbt_receive_conv_register"),Ifs([ElseIf(DataOp("==",[Var("dvbt_receive_current_packet"),Int(0)]),Stats([Assign(Var("dvbt_receive_conv_register"),"=",Var("INIT_CONV_REGISTER"))]))],()),Assign(Var("data"),"=",Subscript(Var("zeros"),[Subscript(Var("length"),[Var("x")]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("data")])),Stats([Assign(Var("data_x"),"=",Subscript(Var("x"),[Var("i")])),For(VarDef("j"),Matrix([[Int(1),Int(2),Int(3),Int(6)]]),Stats([Assign(Var("data_x"),"=",Subscript(Var("soft_xor"),[Var("data_x"),Subscript(Var("dvbt_receive_conv_register"),[Var("j")])]))])),Assign(Var("data_y"),"=",Subscript(Var("y"),[Var("i")])),For(VarDef("j"),Matrix([[Int(2),Int(3),Int(5),Int(6)]]),Stats([Assign(Var("data_y"),"=",Subscript(Var("soft_xor"),[Var("data_y"),Subscript(Var("dvbt_receive_conv_register"),[Var("j")])]))])),Ifs([ElseIf(DataOp("&",[DataOp("==",[Var("data_x"),Float(5.000000000000000e-01)]),DataOp("==",[Var("data_y"),Float(5.000000000000000e-01)])]),Stats([Subscript(Var("fprintf"),[String("warning: undefined symbol %d"),Var("i")])]))],()),Ifs([ElseIf(DataOp("|",[DataOp(">",[DataOp("&",[DataOp("<",[Var("data_x"),Float(5.000000000000000e-01)]),Var("data_y")]),Float(5.000000000000000e-01)]),DataOp("&",[DataOp(">",[Var("data_x"),Float(5.000000000000000e-01)]),DataOp("<",[Var("data_y"),Float(5.000000000000000e-01)])])]),Stats([Subscript(Var("fprintf"),[String("warning: contradicting symbol %d"),Var("i")])]))],()),Ifs([ElseIf(DataOp("|",[DataOp("<",[Var("data_x"),Float(5.000000000000000e-01)]),DataOp("<",[Var("data_y"),Float(5.000000000000000e-01)])]),Stats([Assign(Subscript(Var("data"),[Var("i")]),"=",Int(0))])),ElseIf(DataOp("|",[DataOp(">",[Var("data_x"),Float(5.000000000000000e-01)]),DataOp(">",[Var("data_y"),Float(5.000000000000000e-01)])]),Stats([Assign(Subscript(Var("data"),[Var("i")]),"=",Int(1))]))],Else(Stats([Subscript(Var("fprintf"),[String("error: internal error at symbol %d"),Var("i")])]))),Assign(Var("dvbt_receive_conv_register"),"=",Matrix([[Subscript(Var("data"),[Var("i")]),Subscript(Var("dvbt_receive_conv_register"),[Range(Int(2),Int(1),Int(6))])]]))]))])),FunDec(VarDef("soft_xor"),[VarDef("a"),VarDef("b")],[VarDef("x")],Stats([Ifs([ElseIf(DataOp("<",[Var("b"),Float(5.000000000000000e-01)]),Stats([Assign(Var("x"),"=",Var("a"))])),ElseIf(DataOp("==",[Var("a"),Float(5.000000000000000e-01)]),Stats([Assign(Var("x"),"=",Float(5.000000000000000e-01))])),ElseIf(DataOp(">",[Var("b"),Float(5.000000000000000e-01)]),Stats([Assign(Var("x"),"=",DataOp("-",[Int(1),Var("a")]))]))],())])),FunDec(VarDef("byte_from_bit_vector"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    byte_from_bit_vector (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),Assign(Var("data_out"),"=",Subscript(Var("zeros"),[DataOp("/",[Subscript(Var("length"),[Var("data_in")]),Int(8)]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("data_out")])),Stats([Assign(Var("data_byte"),"=",Int(0)),For(VarDef("j"),Range(Int(1),Int(1),Int(8)),Stats([Ifs([ElseIf(DataOp("<=",[Subscript(Var("data_in"),[DataOp("+",[DataOp("*",[Int(8),DataOp("-",[Var("i"),Int(1)])]),Var("j")])]),Float(5.000000000000000e-01)]),Stats([Assign(Var("data_bit"),"=",Int(0))]))],Else(Stats([Assign(Var("data_bit"),"=",Int(1))]))),Assign(Var("data_byte"),"=",DataOp("+",[DataOp("*",[Int(2),Var("data_byte")]),Var("data_bit")]))])),Assign(Subscript(Var("data_out"),[Var("i")]),"=",Var("data_byte"))]))])),FunDec(VarDef("outer_deinterleave"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    outer_deinterleave (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("PACKET_LENGTH"),VarDef("RS_PARITY_BYTES"),VarDef("OI_I"),VarDef("OI_M"),Assign(Var("data"),"=",Subscript(Var("reshape"),[Var("data_in"),Var("OI_M"),Var("OI_I")])),Assign(Var("data_out"),"=",Subscript(Var("reshape"),[DataOp(".'",[Var("data")]),DataOp("+",[Var("PACKET_LENGTH"),Var("RS_PARITY_BYTES")]),Int(1)]))])),FunDec(VarDef("rs_decode"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    rs_decode (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("PACKET_LENGTH"),VarDef("RS_PARITY_BYTES"),Ifs([ElseIf(DataOp("!=",[Subscript(Var("length"),[Var("data_in")]),DataOp("+",[Var("PACKET_LENGTH"),Var("RS_PARITY_BYTES")])]),Stats([Subscript(Var("fprintf"),[String("error: rs_decode: packet size %d is not expected %d.\n"),Subscript(Var("length"),[Var("data_in")]),DataOp("+",[Var("PACKET_LENGTH"),Var("RS_PARITY_BYTES")])]),Return]))],()),Ifs([ElseIf(DataOp("!=",[Subscript(Var("data_in"),[Range(DataOp("+",[Var("PACKET_LENGTH"),Int(1)]),Int(1),DataOp("+",[Var("PACKET_LENGTH"),Var("RS_PARITY_BYTES")]))]),Subscript(Var("zeros"),[Var("RS_PARITY_BYTES"),Int(1)])]),Stats([Subscript(Var("fprintf"),[String("error: parity\n")])]))],()),Assign(Var("data_out"),"=",Subscript(Var("data_in"),[Range(Int(1),Int(1),Var("PACKET_LENGTH"))]))])),FunDec(VarDef("remove_sync_and_unscramble"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    remove_sync_and_unscramble (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("PACKET_LENGTH"),VarDef("NET_PACKET_LENGTH"),VarDef("PACKETS_PER_PRBS_PERIOD"),VarDef("SYNC_BYTE_VALUE"),VarDef("INV_SYNC_BYTE_VALUE"),VarDef("INIT_PRBS_REGISTER"),VarDef("dvbt_receive_current_packet"),VarDef("dvbt_receive_prbs_register"),Ifs([ElseIf(DataOp("==",[Var("dvbt_receive_current_packet"),Int(0)]),Stats([Assign(Var("dvbt_receive_prbs_register"),"=",Var("INIT_PRBS_REGISTER")),Assign(Var("sync_byte"),"=",Var("INV_SYNC_BYTE_VALUE"))]))],Else(Stats([Subscript(Var("dvbt_receive_current_packet"),[Int(1)]),Assign(Var("sync_byte"),"=",Var("SYNC_BYTE_VALUE"))]))),Ifs([ElseIf(DataOp("!=",[Var("sync_byte"),Subscript(Var("data_in"),[Int(1)])]),Stats([Subscript(Var("fprintf"),[String("warning: actual sync byte (%2.2x) does not match\n"),Subscript(Var("data_in"),[Int(1)])]),Subscript(Var("fprintf"),[String("warning: expected sync byte (%2.2x).\n"),Var("sync_byte")]),Subscript(Var("fprintf"),[String("warning: (current_packet=%d)\n"),Var("dvbt_receive_current_packet")])]))],()),AssignMulti([Var("prbs"),Var("dvbt_receive_prbs_register")],"=",Subscript(Var("prbs_sequence"),[Var("NET_PACKET_LENGTH"),Var("dvbt_receive_prbs_register")])),Assign(Var("data_out"),"=",Subscript(Var("byte_xor"),[Subscript(Var("data_in"),[Range(Int(2),Int(1),Var("PACKET_LENGTH"))]),Var("prbs")]))]))])