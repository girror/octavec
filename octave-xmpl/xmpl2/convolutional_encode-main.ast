Program([FunDec(VarDef("convolutional_encode_tb"),[],[],Stats([Var("global_settings"),Assign(Var("count"),"=",Int(4)),Assign(Var("data_in"),"=",Subscript(Var("zeros"),[Int(2048),Var("count")])),Assign(Var("data_out"),"=",Subscript(Var("zeros"),[Int(2048),Var("count")])),Assign(Subscript(Var("data_in"),[Colon,Int(1)]),"=",Subscript(Var("bit_from_byte_vector"),[Matrix([[Int(0)],[Int(1)],[Int(2)],[Int(3)],[Int(4)],[Int(5)],[Int(6)],[Int(7)],[Int(8)],[Int(9)],[Int(10)],[Int(11)],[Int(12)],[Int(13)],[Int(14)],[Int(15)],[Int(16)],[Int(17)],[Int(18)],[Int(19)],[Int(20)],[Int(21)],[Int(22)],[Int(23)],[Int(24)],[Int(25)],[Int(26)],[Int(27)],[Int(28)],[Int(29)],[Int(30)],[Int(31)],[Int(32)],[Int(33)],[Int(34)],[Int(35)],[Int(36)],[Int(37)],[Int(38)],[Int(39)],[Int(40)],[Int(41)],[Int(42)],[Int(43)],[Int(44)],[Int(45)],[Int(46)],[Int(47)],[Int(48)],[Int(49)],[Int(50)],[Int(51)],[Int(52)],[Int(53)],[Int(54)],[Int(55)],[Int(56)],[Int(57)],[Int(58)],[Int(59)],[Int(60)],[Int(61)],[Int(62)],[Int(63)],[Int(64)],[Int(65)],[Int(66)],[Int(67)],[Int(68)],[Int(69)],[Int(70)],[Int(71)],[Int(72)],[Int(73)],[Int(74)],[Int(75)],[Int(76)],[Int(77)],[Int(78)],[Int(79)],[Int(80)],[Int(81)],[Int(82)],[Int(83)],[Int(84)],[Int(85)],[Int(86)],[Int(87)],[Int(88)],[Int(89)],[Int(90)],[Int(91)],[Int(92)],[Int(93)],[Int(94)],[Int(95)],[Int(96)],[Int(97)],[Int(98)],[Int(99)],[Int(100)],[Int(101)],[Int(102)],[Int(103)],[Int(104)],[Int(105)],[Int(106)],[Int(107)],[Int(108)],[Int(109)],[Int(110)],[Int(111)],[Int(112)],[Int(113)],[Int(114)],[Int(115)],[Int(116)],[Int(117)],[Int(118)],[Int(119)],[Int(120)],[Int(121)],[Int(122)],[Int(123)],[Int(124)],[Int(125)],[Int(126)],[Int(127)],[Int(128)],[Int(129)],[Int(130)],[Int(131)],[Int(132)],[Int(133)],[Int(134)],[Int(135)],[Int(136)],[Int(137)],[Int(138)],[Int(139)],[Int(140)],[Int(141)],[Int(142)],[Int(143)],[Int(144)],[Int(145)],[Int(146)],[Int(147)],[Int(148)],[Int(149)],[Int(150)],[Int(151)],[Int(152)],[Int(153)],[Int(154)],[Int(155)],[Int(156)],[Int(157)],[Int(158)],[Int(159)],[Int(160)],[Int(161)],[Int(162)],[Int(163)],[Int(164)],[Int(165)],[Int(166)],[Int(167)],[Int(168)],[Int(169)],[Int(170)],[Int(171)],[Int(172)],[Int(173)],[Int(174)],[Int(175)],[Int(176)],[Int(177)],[Int(178)],[Int(179)],[Int(180)],[Int(181)],[Int(182)],[Int(183)],[Int(184)],[Int(185)],[Int(186)],[Int(187)],[Int(188)],[Int(189)],[Int(190)],[Int(191)],[Int(192)],[Int(193)],[Int(194)],[Int(195)],[Int(196)],[Int(197)],[Int(198)],[Int(199)],[Int(200)],[Int(201)],[Int(202)],[Int(203)],[Int(204)],[Int(205)],[Int(206)],[Int(207)],[Int(208)],[Int(209)],[Int(210)],[Int(211)],[Int(212)],[Int(213)],[Int(214)],[Int(215)],[Int(216)],[Int(217)],[Int(218)],[Int(219)],[Int(220)],[Int(221)],[Int(222)],[Int(223)],[Int(224)],[Int(225)],[Int(226)],[Int(227)],[Int(228)],[Int(229)],[Int(230)],[Int(231)],[Int(232)],[Int(233)],[Int(234)],[Int(235)],[Int(236)],[Int(237)],[Int(238)],[Int(239)],[Int(240)],[Int(241)],[Int(242)],[Int(243)],[Int(244)],[Int(245)],[Int(246)],[Int(247)],[Int(248)],[Int(249)],[Int(250)],[Int(251)],[Int(252)],[Int(253)],[Int(254)],[Int(255)]])])),For(VarDef("k"),Range(Int(2),Int(1),Var("count")),Stats([Assign(Subscript(Var("data_in"),[Colon,Var("k")]),"=",Subscript(Var("round"),[Subscript(Var("rand"),[Int(2048),Int(1)])]))])),For(VarDef("k"),Range(Int(1),Int(1),Var("count")),Stats([AssignMulti([Var("x"),Var("y")],"=",Subscript(Var("convolutional_encode"),[Subscript(Var("data_in"),[Colon,Var("k")])])),Assign(Subscript(Var("data_out"),[Colon,Var("k")]),"=",Subscript(Var("convolutional_decode"),[Var("x"),Var("y")]))])),Ifs([ElseIf(DataOp("==",[Var("data_in"),Var("data_out")]),Stats([Subscript(Var("fprintf"),[String("convolutional encoder works\n")])]))],Else(Stats([Subscript(Var("fprintf"),[String("error in convolutional encoder\n")])])))])),FunDec(VarDef("global_settings"),[],[],Stats([VarDef("PACKET_LENGTH"),VarDef("NET_PACKET_LENGTH"),VarDef("PACKETS_PER_PRBS_PERIOD"),VarDef("SYNC_BYTE_VALUE"),VarDef("INV_SYNC_BYTE_VALUE"),VarDef("INIT_PRBS_REGISTER"),VarDef("RS_PARITY_BYTES"),VarDef("OI_I"),VarDef("OI_M"),VarDef("INIT_CONV_REGISTER"),VarDef("PUNCTURING_MODE"),VarDef("QAM_MODE"),VarDef("LOG_QAM_MODE"),VarDef("OFDM_SYMBOL_SIZE"),VarDef("OFDM_SYMBOL_LENGTH"),VarDef("OFDM_SYMBOL_NET_LENGTH"),VarDef("FFT_SIZE"),Assign(Var("ffffffff"),"=",Subscript(Var("flipud"),[Matrix([[Int(1),Int(2)]])])),Assign(Var("sssssss"),"=",Subscript(Var("sqrt"),[Float(3.400000095367432e+00)])),Assign(Var("rrrrrrrr"),"=",Subscript(Var("rows"),[Matrix([[Int(1),Int(2)]])])),Assign(Var("ffxxxxxx"),"=",Subscript(Var("diff"),[Matrix([[Int(1),Int(2),Int(8)]]),Int(1)])),Assign(Var("PACKETS_PER_PRBS_PERIOD"),"=",Int(8)),Assign(Var("PACKET_LENGTH"),"=",Int(188)),Assign(Var("NET_PACKET_LENGTH"),"=",DataOp("-",[Var("PACKET_LENGTH"),Int(1)])),Assign(Var("SYNC_BYTE_VALUE"),"=",Subscript(Var("hex2dec"),[String("47")])),Assign(Var("INV_SYNC_BYTE_VALUE"),"=",Subscript(Var("hex2dec"),[String("b8")])),Assign(Var("INIT_PRBS_REGISTER"),"=",Matrix([[Int(1),Int(0),Int(0),Int(1),Int(0),Int(1),Int(0),Int(1),Int(0),Int(0),Int(0),Int(0),Int(0),Int(0),Int(0)]])),Assign(Var("RS_PARITY_BYTES"),"=",Int(16)),Assign(Var("OI_I"),"=",Int(12)),Assign(Var("OI_M"),"=",Int(17)),VarDef("SEND_OI_STATE"),Assign(Var("SEND_OI_STATE"),"=",Subscript(Var("zeros"),[Var("OI_I"),DataOp("+",[DataOp("*",[Var("OI_I"),Var("OI_M")]),Int(1)])])),VarDef("SEND_OI_POINTER"),Assign(Var("SEND_OI_POINTER"),"=",Int(0)),VarDef("RECEIVE_OI_STATE"),Assign(Var("RECEIVE_OI_STATE"),"=",Subscript(Var("zeros"),[Var("OI_I"),DataOp("+",[DataOp("*",[Var("OI_I"),Var("OI_M")]),Int(1)])])),VarDef("RECEIVE_OI_POINTER"),Assign(Var("RECEIVE_OI_POINTER"),"=",Int(0)),VarDef("OI_PACKETS_TO_TRASH"),Assign(Var("OI_PACKETS_TO_TRASH"),"=",Int(11)),Assign(Var("INIT_CONV_REGISTER"),"=",Subscript(Var("zeros"),[Int(1),Int(6)])),Assign(Var("PUNCTURING_MODE"),"=",Float(6.666666865348816e-01)),Assign(Var("QAM_MODE"),"=",Int(16)),Assign(Var("LOG_QAM_MODE"),"=",Subscript(Var("log2"),[Var("QAM_MODE")])),Assign(Var("OFDM_SYMBOL_SIZE"),"=",Int(1512)),Assign(Var("OFDM_SYMBOL_LENGTH"),"=",Int(6048)),Assign(Var("OFDM_SYMBOL_NET_LENGTH"),"=",DataOp("*",[Var("OFDM_SYMBOL_LENGTH"),Var("PUNCTURING_MODE")])),Assign(Var("FFT_SIZE"),"=",Int(2048)),VarDef("dvbt_send_current_packet"),VarDef("bit_stream"),VarDef("dvbt_receive_current_packet"),Assign(Var("dvbt_send_current_packet"),"=",Int(0)),Assign(Var("bit_stream"),"=",Matrix([])),Assign(Var("dvbt_receive_current_packet"),"=",DataOp("-",[Var("OI_PACKETS_TO_TRASH")])),VarDef("byte_stream"),Assign(Var("byte_stream"),"=",Matrix([])),VarDef("dvbt_send_conv_register"),Assign(Var("dvbt_send_conv_register"),"=",Var("INIT_CONV_REGISTER")),VarDef("dvbt_receive_conv_register"),Assign(Var("dvbt_receive_conv_register"),"=",Var("INIT_CONV_REGISTER")),VarDef("II_BLOCK_SIZE"),Assign(Var("II_BLOCK_SIZE"),"=",Int(126)),Assign(Var("Nmax"),"=",Int(1512)),Assign(Var("Mmax"),"=",Int(2048)),VarDef("Hq"),Assign(Var("Hq"),"=",Subscript(Var("zeros"),[Var("Nmax"),Int(1)])),Assign(Var("q"),"=",Int(0)),Assign(Var("Nr"),"=",Int(11)),For(VarDef("i"),Range(Int(0),Int(1),DataOp("-",[Var("Mmax"),Int(1)])),Stats([Switch(Var("i"),[Case(Int(0),Stats([Assign(Var("r1"),"=",Subscript(Var("zeros"),[Int(1),DataOp("-",[Var("Nr"),Int(1)])]))])),Case(Int(1),Stats([Assign(Var("r1"),"=",Subscript(Var("zeros"),[Int(1),DataOp("-",[Var("Nr"),Int(1)])]))])),Case(Int(2),Stats([Assign(Var("r1"),"=",Subscript(Var("zeros"),[Int(1),DataOp("-",[Var("Nr"),Int(1)])])),Assign(Subscript(Var("r1"),[Int(1)]),"=",Int(1))]))],Stats([Stats([Assign(Var("r1"),"=",Matrix([[Subscript(Var("r1"),[Range(Int(2),Int(1),DataOp("-",[Var("Nr"),Int(1)]))]),Subscript(Var("xor"),[Subscript(Var("r1"),[Int(1)]),Subscript(Var("r1"),[Int(4)])])]]))])])),Assign(Var("perm_table"),"=",Matrix([[Int(4),Int(3),Int(9),Int(6),Int(2),Int(8),Int(1),Int(5),Int(7),Int(0)]])),Assign(Var("r"),"=",Subscript(Var("zeros"),[Int(1),DataOp("-",[Var("Nr"),Int(1)])])),For(VarDef("k"),Range(Int(0),Int(1),DataOp("-",[Var("Nr"),Int(2)])),Stats([Assign(Subscript(Var("r"),[DataOp("+",[Int(1),Subscript(Var("perm_table"),[DataOp("+",[Int(1),Var("k")])])])]),"=",Subscript(Var("r1"),[DataOp("+",[Int(1),Var("k")])]))])),Assign(Subscript(Var("Hq"),[DataOp("+",[Int(1),Var("q")])]),"=",DataOp("*",[Subscript(Var("rem"),[Var("i"),Int(2)]),DataOp("^",[Int(2),DataOp("-",[Var("Nr"),Int(1)])])])),For(VarDef("j"),Range(Int(0),Int(1),DataOp("-",[Var("Nr"),Int(2)])),Stats([Assign(Subscript(Var("Hq"),[DataOp("+",[Int(1),Var("q")])]),"=",DataOp("+",[Subscript(Var("Hq"),[DataOp("+",[Int(1),Var("q")])]),DataOp("*",[Subscript(Var("r"),[DataOp("+",[Int(1),Var("j")])]),DataOp("^",[Int(2),Var("j")])])]))])),Ifs([ElseIf(DataOp("<",[Subscript(Var("Hq"),[DataOp("+",[Int(1),Var("q")])]),Var("Nmax")]),Stats([Assign(Var("q"),"=",DataOp("+",[Var("q"),Int(1)]))]))],())])),VarDef("SEND_EVEN_SYMBOL"),Assign(Var("SEND_EVEN_SYMBOL"),"=",Int(1)),VarDef("RECEIVE_EVEN_SYMBOL"),Assign(Var("RECEIVE_EVEN_SYMBOL"),"=",Int(1)),VarDef("QAM_TABLE"),Assign(Var("QAM_TABLE"),"=",Matrix([[Int(1000),Int(1010),Int(10),Int(0)],[Int(1001),Int(1011),Int(11),Int(1)],[Int(1101),Int(1111),Int(111),Int(101)],[Int(1100),Int(1110),Int(110),Int(100)]])),VarDef("QAM_ROW"),Assign(Var("QAM_ROW"),"=",Matrix([[Complex(Int(0),Int(3)),Complex(Int(0),Int(1)),Complex(Int(0),Int(-1)),Complex(Int(0),Int(-3))]])),VarDef("QAM_COL"),Assign(Var("QAM_COL"),"=",Matrix([[Int(-3),Int(-1),Int(1),Int(3)]])),VarDef("CARRIER_COUNT"),Assign(Var("CARRIER_COUNT"),"=",Int(1705)),VarDef("CCP_TABLE"),Assign(Var("CCP_TABLE"),"=",Matrix([[Int(0),Int(48),Int(54),Int(87),Int(141),Int(156),Int(192),Int(201),Int(255),Int(279),Int(282),Int(333),Int(432),Int(450),Int(483),Int(525),Int(531),Int(618),Int(636),Int(714),Int(759),Int(765),Int(780),Int(804),Int(873),Int(888),Int(918),Int(939),Int(942),Int(969),Int(984),Int(1050),Int(1101),Int(1107),Int(1110),Int(1137),Int(1140),Int(1146),Int(1206),Int(1269),Int(1323),Int(1377),Int(1491),Int(1683),Int(1704)]])),VarDef("REF_SEQUENCE"),Assign(Var("REF_SEQUENCE"),"=",Subscript(Var("zeros"),[Int(1),Var("CARRIER_COUNT")])),Assign(Var("reg"),"=",Subscript(Var("ones"),[Int(1),Int(11)])),For(VarDef("i"),Range(Int(1),Int(1),Var("CARRIER_COUNT")),Stats([Assign(Subscript(Var("REF_SEQUENCE"),[Var("i")]),"=",Subscript(Var("reg"),[Int(11)])),Assign(Var("new_bit"),"=",Subscript(Var("xor"),[Subscript(Var("reg"),[Int(9)]),Subscript(Var("reg"),[Int(11)])])),Assign(Var("reg"),"=",Matrix([[Var("new_bit"),Subscript(Var("reg"),[Range(Int(1),Int(1),Int(10))])]]))])),VarDef("TPS_TABLE"),Assign(Var("TPS_TABLE"),"=",Matrix([[Int(34),Int(50),Int(209),Int(346),Int(413),Int(569),Int(595),Int(688),Int(790),Int(901),Int(1073),Int(1219),Int(1262),Int(1286),Int(1469),Int(1594),Int(1687)]])),VarDef("SEND_FRAME_INDEX"),Assign(Var("SEND_FRAME_INDEX"),"=",Int(0)),VarDef("RECEIVE_FRAME_INDEX"),Assign(Var("RECEIVE_FRAME_INDEX"),"=",Int(0)),VarDef("FRAMES_PER_SUPERFRAME"),Assign(Var("FRAMES_PER_SUPERFRAME"),"=",Int(68)),VarDef("ALPHA"),Assign(Var("ALPHA"),"=",DataOp("/",[Int(1),Subscript(Var("sqrt"),[Int(10)])])),VarDef("GUARD_INTERVAL_DURATION"),Assign(Var("GUARD_INTERVAL_DURATION"),"=",Float(2.500000000000000e-01)),VarDef("OFDM_MODE"),Assign(Var("OFDM_MODE"),"=",Int(2048)),Subscript(Var("gf_init"),[Matrix([[Int(8),Int(4),Int(3),Int(2),Int(0)]])]),Subscript(Var("rs_init"),[Subscript(Var("hex2dec"),[String("02")]),Int(8)])])),FunDec(VarDef("flipud"),[VarDef("x")],[VarDef("y")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("flipud (x)")])]))],()),Assign(Var("nr"),"=",Subscript(Var("rows"),[Var("x")])),Assign(Var("y"),"=",Subscript(Var("x"),[Range(Var("nr"),Int(-1),Int(1)),Colon]))])),FunDec(VarDef("rows"),[VarDef("x")],[VarDef("nr")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("rows (x)")])]))],()),AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")]))])),FunDec(VarDef("diff"),[VarDef("x"),VarDef("k")],[VarDef("x")],Stats([Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Assign(Var("k"),"=",Int(1))])),ElseIf(DataOp("==",[Var("nargin"),Int(2)]),Stats([Ifs([ElseIf(DataOp("!",[DataOp("&&",[DataOp("&&",[Subscript(Var("is_scalar"),[Var("k")]),DataOp("==",[Var("k"),Subscript(Var("round"),[Var("k")])])]),DataOp(">=",[Var("k"),Int(0)])])]),Stats([Subscript(Var("error"),[String("diff: k must be a nonnegative integer")])])),ElseIf(DataOp("==",[Var("k"),Int(0)]),Stats([Return]))],())]))],Else(Stats([Subscript(Var("usage"),[String("diff (x, k")])]))),Ifs([ElseIf(Subscript(Var("isstr"),[Var("x")]),Stats([Subscript(Var("error"),[String("diff: symbolic differentiation not (yet) supported")])])),ElseIf(Subscript(Var("is_vector"),[Var("x")]),Stats([Assign(Var("n"),"=",Subscript(Var("length"),[Var("x")])),Ifs([ElseIf(DataOp("<=",[Var("n"),Var("k")]),Stats([Assign(Var("x"),"=",Matrix([]))]))],Else(Stats([For(VarDef("i"),Range(Int(1),Int(1),Var("k")),Stats([Assign(Var("x"),"=",DataOp("-",[Subscript(Var("x"),[Range(Int(2),Int(1),DataOp("+",[DataOp("-",[Var("n"),Var("i")]),Int(1)]))]),Subscript(Var("x"),[Range(Int(1),Int(1),DataOp("-",[Var("n"),Var("i")]))])]))]))])))])),ElseIf(Subscript(Var("is_matrix"),[Var("x")]),Stats([Assign(Var("n"),"=",Subscript(Var("rows"),[Var("x")])),Ifs([ElseIf(DataOp("<=",[Var("n"),Var("k")]),Stats([Assign(Var("x"),"=",Matrix([]))]))],Else(Stats([For(VarDef("i"),Range(Int(1),Int(1),Var("k")),Stats([Assign(Var("x"),"=",DataOp("-",[Subscript(Var("x"),[Range(Int(2),Int(1),DataOp("+",[DataOp("-",[Var("n"),Var("i")]),Int(1)])),Colon]),Subscript(Var("x"),[Range(Int(1),Int(1),DataOp("-",[Var("n"),Var("i")])),Colon])]))]))])))]))],Else(Stats([Assign(Var("x"),"=",Matrix([]))])))])),FunDec(VarDef("is_scalar"),[VarDef("x")],[VarDef("retval")],Stats([Assign(Var("retval"),"=",Int(0)),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Ifs([ElseIf(Subscript(Var("is_matrix"),[Var("x")]),Stats([AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")])),Assign(Var("retval"),"=",DataOp("&&",[DataOp("==",[Var("nr"),Int(1)]),DataOp("==",[Var("nc"),Int(1)])]))]))],())]))],Else(Stats([Subscript(Var("usage"),[String("is_scalar (x)")])])))])),FunDec(VarDef("is_vector"),[VarDef("x")],[VarDef("retval")],Stats([Assign(Var("retval"),"=",Int(0)),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Ifs([ElseIf(Subscript(Var("is_matrix"),[Var("x")]),Stats([AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")])),Assign(Var("retval"),"=",DataOp("||",[DataOp("&&",[DataOp("==",[Var("nr"),Int(1)]),DataOp(">=",[Var("nc"),Int(1)])]),DataOp("&&",[DataOp("==",[Var("nc"),Int(1)]),DataOp(">=",[Var("nr"),Int(1)])])]))]))],())]))],Else(Stats([Subscript(Var("usage"),[String("is_vector (x)")])])))])),FunDec(VarDef("hex2dec"),[VarDef("h")],[VarDef("d")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("hex2dec (b)")])]))],Else(Stats([Assign(Var("d"),"=",Subscript(Var("base2dec"),[Var("h"),Int(16)]))])))])),FunDec(VarDef("base2dec"),[VarDef("d"),VarDef("base")],[VarDef("out")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(2)]),Stats([Subscript(Var("usage"),[String("n = base2dec('d', base)")])]))],()),Assign(Var("symbols"),"=",String("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ")),Ifs([ElseIf(Subscript(Var("isstr"),[Var("base")]),Stats([Assign(Var("symbols"),"=",Var("base")),Assign(Var("base"),"=",Subscript(Var("length"),[Var("symbols")])),Ifs([ElseIf(Subscript(Var("any"),[DataOp("==",[Subscript(Var("diff"),[Subscript(Var("sort"),[Subscript(Var("toascii"),[Var("symbols")])])]),Int(0)])]),Stats([Subscript(Var("error"),[String("base2dec: symbols representing digits must be unique.")])]))],())])),ElseIf(DataOp("!",[Subscript(Var("is_scalar"),[Var("base")])]),Stats([Subscript(Var("error"),[String("base2dec: cannot convert from several bases at once.")])])),ElseIf(DataOp("||",[DataOp("<",[Var("base"),Int(2)]),DataOp(">",[Var("base"),Subscript(Var("length"),[Var("symbols")])])]),Stats([Subscript(Var("error"),[String("base2dec: base must be between 2 and 36 or a string of symbols")])]))],Else(Stats([Assign(Var("d"),"=",Subscript(Var("toupper"),[Var("d")]))]))),Assign(Var("d"),"=",Subscript(Var("strjust"),[Var("d"),String("right")])),Assign(Var("table"),"=",DataOp("*",[Var("NaN"),Subscript(Var("ones"),[Int(256),Int(1)])])),Assign(Subscript(Var("table"),[Subscript(Var("toascii"),[Subscript(Var("symbols"),[Range(Int(1),Int(1),Var("base"))])])]),"=",Range(Int(0),Int(1),DataOp("-",[Var("base"),Int(1)]))),Assign(Subscript(Var("table"),[Subscript(Var("toascii"),[String(" ")])]),"=",Int(0)),Assign(Var("d"),"=",Subscript(Var("reshape"),[Subscript(Var("table"),[Subscript(Var("toascii"),[Var("d")])]),Subscript(Var("size"),[Var("d")])])),Assign(Var("out"),"=",DataOp("*",[Var("d"),DataOp(".^",[Var("base"),DataOp("'",[Range(DataOp("-",[Subscript(Var("columns"),[Var("d")]),Int(1)]),Int(-1),Int(0))])])]))])),FunDec(VarDef("strjust"),[VarDef("x"),VarDef("just")],[VarDef("x")],Stats([Ifs([ElseIf(DataOp("||",[DataOp("<",[Var("nargin"),Int(1)]),DataOp(">",[Var("nargin"),Int(2)])]),Stats([Subscript(Var("usage"),[String("strjust (s, ['left'|'right'|'center'])")])]))],()),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Assign(Var("just"),"=",String("right"))]))],()),Assign(Var("just"),"=",Subscript(Var("tolower"),[Var("just")])),Assign(Var("dfi"),"=",Var("do_fortran_indexing")),UnwindProtect(Stats([Assign(Var("do_fortran_indexing"),"=",Int(1)),Assign(Var("idx"),"=",Subscript(Var("find"),[DataOp("==",[Subscript(Var("toascii"),[Var("x")]),Int(0)])])),Ifs([ElseIf(DataOp("!",[Subscript(Var("isempty"),[Var("idx")])]),Stats([Assign(Subscript(Var("x"),[Var("idx")]),"=",String(" "))]))],()),AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")])),Assign(Var("idx"),"=",DataOp("!=",[DataOp("'",[Var("x")]),String(" ")])),Ifs([ElseIf(Subscript(Var("strcmp"),[Var("just"),String("right")]),Stats([AssignMulti([Var("N"),Var("hi")],"=",Subscript(Var("max"),[Subscript(Var("cumsum"),[Var("idx")])])),Assign(Var("shift"),"=",Var("hi"))])),ElseIf(Subscript(Var("strcmp"),[Var("just"),String("left")]),Stats([AssignMulti([Var("N"),Var("lo")],"=",Subscript(Var("max"),[Subscript(Var("cumsum"),[Subscript(Var("flipud"),[Var("idx")])])])),Assign(Var("shift"),"=",DataOp("-",[Var("nc"),Var("lo")]))]))],Else(Stats([AssignMulti([Var("N"),Var("hi")],"=",Subscript(Var("max"),[Subscript(Var("cumsum"),[Var("idx")])])),AssignMulti([Var("N"),Var("lo")],"=",Subscript(Var("max"),[Subscript(Var("cumsum"),[Subscript(Var("flipud"),[Var("idx")])])])),Assign(Var("shift"),"=",Subscript(Var("ceil"),[DataOp("-",[Var("nc"),DataOp("/",[DataOp("-",[Var("lo"),Var("hi")]),Int(2)])])]))]))),Assign(Var("idx"),"=",Subscript(Var("rem"),[DataOp("+",[DataOp("*",[Subscript(Var("ones"),[Var("nr"),Int(1)]),Matrix([[Range(Int(0),Int(1),DataOp("-",[Var("nc"),Int(1)]))]])]),DataOp("*",[DataOp("'",[Var("shift")]),Subscript(Var("ones"),[Int(1),Var("nc")])])]),Var("nc")])),Assign(Var("x"),"=",Subscript(Var("x"),[DataOp("+",[DataOp("*",[Var("idx"),Var("nr")]),DataOp("*",[DataOp("'",[Matrix([[Range(Int(1),Int(1),Var("nr"))]])]),Subscript(Var("ones"),[Int(1),Var("nc")])])])]))]),Stats([Assign(Var("do_fortran_indexing"),"=",Var("dfi"))]))])),FunDec(VarDef("strcmp"),[VarDef("s1"),VarDef("s2")],[VarDef("status")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(2)]),Stats([Subscript(Var("usage"),[String("strcmp (s, t)")])]))],()),Assign(Var("status"),"=",Int(0)),Ifs([ElseIf(DataOp("&&",[Subscript(Var("isstr"),[Var("s1")]),Subscript(Var("isstr"),[Var("s2")])]),Stats([AssignMulti([Var("r1"),Var("c1")],"=",Subscript(Var("size"),[Var("s1")])),AssignMulti([Var("r2"),Var("c2")],"=",Subscript(Var("size"),[Var("s2")])),Ifs([ElseIf(DataOp("&&",[DataOp("==",[Var("r1"),Var("r2")]),DataOp("==",[Var("c1"),Var("c2")])]),Stats([Ifs([ElseIf(DataOp("==",[Var("c1"),Int(0)]),Stats([Assign(Var("status"),"=",Int(1))]))],Else(Stats([Assign(Var("status"),"=",Subscript(Var("all"),[Subscript(Var("all"),[DataOp("==",[Var("s1"),Var("s2")])])]))])))]))],())]))],())])),FunDec(VarDef("rem"),[VarDef("x"),VarDef("y")],[VarDef("retval")],Stats([Assign(Var("usage_msg"),"=",String("rem (x, y)")),Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(2)]),Stats([Subscript(Var("usage"),[Var("usage_msg")])]))],()),Ifs([ElseIf(DataOp("&&",[Subscript(Var("any"),[DataOp("!=",[Subscript(Var("size"),[Var("x")]),Subscript(Var("size"),[Var("y")])])]),DataOp("!",[DataOp("||",[Subscript(Var("is_scalar"),[Var("x")]),Subscript(Var("is_scalar"),[Var("y")])])])]),Stats([Subscript(Var("error"),[String("rem: argument sizes must agree")])]))],()),Ifs([ElseIf(DataOp("||",[Subscript(Var("any"),[Subscript(Var("any"),[Subscript(Var("imag"),[Var("x")])])]),Subscript(Var("any"),[Subscript(Var("any"),[Subscript(Var("imag"),[Var("y")])])])]),Stats([Subscript(Var("error"),[String("rem: complex arguments are not allowed")])]))],()),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(2)]),Stats([Assign(Var("retval"),"=",DataOp("-",[Var("x"),DataOp(".*",[Var("y"),Subscript(Var("fix"),[DataOp("./",[Var("x"),Var("y")])])])]))]))],Else(Stats([Subscript(Var("error"),[Var("usage_msg")])])))])),FunDec(VarDef("reshape"),[VarDef("a"),VarDef("m"),VarDef("n")],[VarDef("retval")],Stats([Ifs([ElseIf(DataOp("&&",[DataOp("==",[Var("nargin"),Int(2)]),DataOp("==",[Subscript(Var("prod"),[Subscript(Var("size"),[Var("m")])]),Int(2)])]),Stats([Assign(Var("n"),"=",Subscript(Var("m"),[Int(2)])),Assign(Var("m"),"=",Subscript(Var("m"),[Int(1)])),Assign(Var("nargin"),"=",Int(3))]))],()),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(3)]),Stats([AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("a")])),Ifs([ElseIf(DataOp("==",[DataOp("*",[Var("nr"),Var("nc")]),DataOp("*",[Var("m"),Var("n")])]),Stats([Assign(Var("retval"),"=",Subscript(Var("zeros"),[Var("m"),Var("n")])),Ifs([ElseIf(Subscript(Var("isstr"),[Var("a")]),Stats([Assign(Var("retval"),"=",Subscript(Var("setstr"),[Var("retval")]))]))],()),Assign(Subscript(Var("retval"),[Colon]),"=",Var("a"))]))],Else(Stats([Subscript(Var("error"),[String("reshape: sizes must match")])])))]))],Else(Stats([Subscript(Var("usage"),[String("reshape (a, m, n) or reshape (a, size (b))")])])))])),FunDec(VarDef("columns"),[VarDef("x")],[VarDef("nc")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("columns (x)")])]))],()),AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")]))])),FunDec(VarDef("log2"),[VarDef("x")],[VarDef("f"),VarDef("e")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("y = log2 (x) or [f, e] = log2 (x)")])]))],()),Ifs([ElseIf(DataOp("<",[Var("nargout"),Int(2)]),Stats([Assign(Var("f"),"=",DataOp("/",[Subscript(Var("log"),[Var("x")]),Subscript(Var("log"),[Int(2)])]))])),ElseIf(DataOp("==",[Var("nargout"),Int(2)]),Stats([Assign(Var("x"),"=",Subscript(Var("real"),[Var("x")])),Assign(Var("f"),"=",DataOp("+",[Subscript(Var("abs"),[Var("x")]),DataOp("==",[Var("x"),Int(0)])])),Assign(Var("e"),"=",DataOp(".*",[DataOp("+",[Subscript(Var("floor"),[DataOp("/",[Subscript(Var("log"),[Var("f")]),Subscript(Var("log"),[Int(2)])])]),Int(1)]),DataOp("!=",[Var("x"),Int(0)])])),Assign(Var("f"),"=",DataOp("./",[DataOp(".*",[Subscript(Var("sign"),[Var("x")]),Var("f")]),DataOp(".^",[Int(2),Var("e")])]))]))],Else(Stats([Subscript(Var("error"),[String("log2 takes at most 2 output arguments")])])))])),FunDec(VarDef("xor"),[VarDef("x"),VarDef("y")],[VarDef("z")],Stats([Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(2)]),Stats([Ifs([ElseIf(DataOp("||",[DataOp("||",[Subscript(Var("is_scalar"),[Var("x")]),Subscript(Var("is_scalar"),[Var("y")])]),DataOp("==",[Subscript(Var("size"),[Var("x")]),Subscript(Var("size"),[Var("y")])])]),Stats([Assign(Var("z"),"=",Subscript(Var("logical"),[DataOp("-",[DataOp("|",[Var("x"),Var("y")]),DataOp("&",[Var("x"),Var("y")])])]))]))],Else(Stats([Subscript(Var("error"),[String("xor: x and y must be of common size or scalars")])])))]))],Else(Stats([Subscript(Var("usage"),[String("xor (x, y)")])])))])),FunDec(VarDef("logical"),[VarDef("x")],[VarDef("y")],Stats([Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Ifs([ElseIf(DataOp("||",[Subscript(Var("islogical"),[Var("x")]),Subscript(Var("isempty"),[Var("x")])]),Stats([Assign(Var("y"),"=",Var("x"))])),ElseIf(Subscript(Var("isnumeric"),[Var("x")]),Stats([Assign(Var("y"),"=",DataOp("!=",[Var("x"),Int(0)]))]))],Else(Stats([Subscript(Var("error"),[String("logical not defined for type `%s'"),Subscript(Var("typeinfo"),[Var("x")])])])))]))],Else(Stats([Subscript(Var("usage"),[String("logical (x)")])])))])),FunDec(VarDef("gf_init"),[VarDef("field_generator_coeff")],[],Stats([VarDef("GFLOG"),VarDef("GFEXP"),Assign(Var("field_generator_coeff"),"=",Subscript(Var("sort"),[Var("field_generator_coeff")])),Assign(Var("w"),"=",Subscript(Var("max"),[Var("field_generator_coeff")])),Assign(Var("n"),"=",DataOp("^",[Int(2),Var("w")])),Assign(Var("field_generator"),"=",Subscript(Var("zeros"),[Int(1),DataOp("+",[Var("w"),Int(1)])])),For(VarDef("k"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("field_generator_coeff")])),Stats([Assign(Subscript(Var("field_generator"),[DataOp("+",[Int(1),Subscript(Var("field_generator_coeff"),[Var("k")])])]),"=",Int(1))])),Assign(Var("GFLOG"),"=",Subscript(Var("zeros"),[DataOp("-",[Var("n"),Int(1)]),Int(1)])),Assign(Var("GFEXP"),"=",Subscript(Var("zeros"),[DataOp("-",[Var("n"),Int(1)]),Int(1)])),Assign(Var("pe"),"=",Subscript(Var("zeros"),[Int(1),DataOp("+",[Var("w"),Int(1)])])),Assign(Subscript(Var("pe"),[Int(1)]),"=",Int(1)),For(VarDef("k"),Range(Int(1),Int(1),DataOp("-",[Var("n"),Int(1)])),Stats([Assign(Var("value"),"=",Int(0)),For(VarDef("l"),Range(Int(0),Int(1),DataOp("-",[Var("w"),Int(1)])),Stats([Ifs([ElseIf(DataOp("==",[Subscript(Var("pe"),[DataOp("+",[Int(1),Var("l")])]),Int(1)]),Stats([Assign(Var("value"),"=",DataOp("+",[Var("value"),DataOp("^",[Int(2),Var("l")])]))]))],())])),Assign(Subscript(Var("GFEXP"),[Var("k")]),"=",Var("value")),Assign(Subscript(Var("GFLOG"),[Var("value")]),"=",Var("k")),Assign(Var("pe"),"=",Matrix([[Int(0),Subscript(Var("pe"),[Range(Int(1),Int(1),Var("w"))])]])),Ifs([ElseIf(DataOp("==",[Subscript(Var("pe"),[DataOp("+",[Var("w"),Int(1)])]),Int(1)]),Stats([Assign(Var("pe"),"=",Subscript(Var("xor"),[Var("pe"),Var("field_generator")]))]))],())]))])),FunDec(VarDef("rs_init"),[VarDef("alpha"),VarDef("t")],[],Stats([VarDef("RS_GENERATOR"),Assign(Var("RS_GENERATOR"),"=",Subscript(Var("zeros"),[DataOp("+",[DataOp("*",[Int(2),Var("t")]),Int(1)]),Int(1)])),Assign(Subscript(Var("RS_GENERATOR"),[Int(1)]),"=",Var("alpha")),Assign(Subscript(Var("RS_GENERATOR"),[Int(2)]),"=",Int(1)),For(VarDef("k"),Range(Int(3),Int(1),DataOp("+",[DataOp("*",[Int(2),Var("t")]),Int(1)])),Stats([Assign(Subscript(Var("RS_GENERATOR"),[Var("k")]),"=",Int(1)),For(VarDef("l"),Range(DataOp("-",[Var("k"),Int(1)]),Int(-1),Int(2)),Stats([Assign(Subscript(Var("RS_GENERATOR"),[Var("l")]),"=",Subscript(Var("gf_add"),[Subscript(Var("RS_GENERATOR"),[DataOp("-",[Var("l"),Int(1)])]),Subscript(Var("gf_mul"),[Var("alpha"),Subscript(Var("RS_GENERATOR"),[Var("l")])])]))])),Assign(Subscript(Var("RS_GENERATOR"),[Int(1)]),"=",Subscript(Var("gf_mul"),[Var("alpha"),Subscript(Var("RS_GENERATOR"),[Int(1)])]))]))])),FunDec(VarDef("gf_add"),[VarDef("a"),VarDef("b")],[VarDef("result")],Stats([Assign(Var("result"),"=",Subscript(Var("byte_xor"),[Var("a"),Var("b")]))])),FunDec(VarDef("gf_mul"),[VarDef("a"),VarDef("b")],[VarDef("result")],Stats([VarDef("GFLOG"),VarDef("GFEXP"),Ifs([ElseIf(DataOp("|",[DataOp("==",[Var("a"),Int(0)]),DataOp("==",[Var("b"),Int(0)])]),Stats([Assign(Var("result"),"=",Int(0))]))],Else(Stats([Assign(Var("log_result"),"=",DataOp("+",[Subscript(Var("GFLOG"),[Var("a")]),Subscript(Var("GFLOG"),[Var("b")])])),While(DataOp(">",[Var("log_result"),Subscript(Var("length"),[Var("GFEXP")])]),Stats([Assign(Var("log_result"),"=",DataOp("-",[Var("log_result"),Subscript(Var("length"),[Var("GFEXP")])]))])),Assign(Var("result"),"=",Subscript(Var("GFEXP"),[Var("log_result")]))])))])),FunDec(VarDef("byte_xor"),[VarDef("byte_vector1"),VarDef("byte_vector2")],[VarDef("result")],Stats([Assign(Var("result"),"=",Var("byte_vector1")),For(VarDef("i"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("byte_vector1")])),Stats([Assign(Var("byte1"),"=",Subscript(Var("byte_vector1"),[Var("i")])),Assign(Var("byte2"),"=",Subscript(Var("byte_vector2"),[Var("i")])),Assign(Var("result_byte"),"=",Int(0)),For(VarDef("j"),Range(Int(1),Int(1),Int(8)),Stats([Assign(Var("bit1"),"=",Subscript(Var("rem"),[Var("byte1"),Int(2)])),Assign(Var("bit2"),"=",Subscript(Var("rem"),[Var("byte2"),Int(2)])),Assign(Var("result_bit"),"=",Subscript(Var("xor"),[Var("bit1"),Var("bit2")])),Assign(Var("result_byte"),"=",DataOp("+",[Var("result_byte"),DataOp("*",[Var("result_bit"),DataOp("^",[Int(2),DataOp("-",[Var("j"),Int(1)])])])])),Assign(Var("byte1"),"=",Subscript(Var("fix"),[DataOp("/",[Var("byte1"),Int(2)])])),Assign(Var("byte2"),"=",Subscript(Var("fix"),[DataOp("/",[Var("byte2"),Int(2)])]))])),Assign(Subscript(Var("result"),[Var("i")]),"=",Var("result_byte"))]))])),FunDec(VarDef("bit_from_byte_vector"),[VarDef("data_in")],[VarDef("data_out")],Stats([Assign(Var("data_out"),"=",Subscript(Var("zeros"),[DataOp("*",[Subscript(Var("length"),[Var("data_in")]),Int(8)]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("data_in")])),Stats([Assign(Var("data_byte"),"=",Subscript(Var("data_in"),[Var("i")])),For(VarDef("j"),Range(Int(1),Int(1),Int(8)),Stats([Ifs([ElseIf(DataOp(">=",[Var("data_byte"),Float(1.275000000000000e+02)]),Stats([Assign(Subscript(Var("data_out"),[DataOp("+",[DataOp("*",[Int(8),DataOp("-",[Var("i"),Int(1)])]),Var("j")])]),"=",Int(1))]))],()),Assign(Var("data_byte"),"=",DataOp("*",[Subscript(Var("rem"),[Var("data_byte"),Int(128)]),Int(2)]))]))]))])),FunDec(VarDef("convolutional_encode"),[VarDef("data")],[VarDef("x"),VarDef("y")],Stats([Subscript(Var("fprintf"),[String("    convolutional_encode (%d)\n"),Subscript(Var("length"),[Var("data")])]),VarDef("INIT_CONV_REGISTER"),VarDef("dvbt_send_current_packet"),VarDef("dvbt_send_conv_register"),Assign(Var("x"),"=",Subscript(Var("zeros"),[Subscript(Var("length"),[Var("data")]),Int(1)])),Assign(Var("y"),"=",Subscript(Var("zeros"),[Subscript(Var("length"),[Var("data")]),Int(1)])),For(VarDef("k"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("data")])),Stats([Assign(Var("data_in"),"=",Subscript(Var("data"),[Var("k")])),Assign(Subscript(Var("x"),[Var("k")]),"=",Var("data_in")),For(VarDef("v"),Matrix([[Int(1),Int(2),Int(3),Int(6)]]),Stats([Assign(Subscript(Var("x"),[Var("k")]),"=",Subscript(Var("xor"),[Subscript(Var("x"),[Var("k")]),Subscript(Var("dvbt_send_conv_register"),[Var("v")])]))])),Assign(Subscript(Var("y"),[Var("k")]),"=",Var("data_in")),For(VarDef("v"),Matrix([[Int(2),Int(3),Int(5),Int(6)]]),Stats([Assign(Subscript(Var("y"),[Var("k")]),"=",Subscript(Var("xor"),[Subscript(Var("y"),[Var("k")]),Subscript(Var("dvbt_send_conv_register"),[Var("v")])]))])),Assign(Var("dvbt_send_conv_register"),"=",Matrix([[Var("data_in"),Subscript(Var("dvbt_send_conv_register"),[Range(Int(2),Int(1),Int(6))])]]))]))])),FunDec(VarDef("convolutional_decode"),[VarDef("x"),VarDef("y")],[VarDef("data")],Stats([Subscript(Var("fprintf"),[String("    convolutional_decode (%d)\n"),Subscript(Var("length"),[Var("x")])]),VarDef("INIT_CONV_REGISTER"),VarDef("dvbt_receive_current_packet"),VarDef("dvbt_receive_conv_register"),Assign(Var("data"),"=",Subscript(Var("zeros"),[Subscript(Var("length"),[Var("x")]),Int(1)])),For(VarDef("k"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("data")])),Stats([Assign(Var("data_x"),"=",Subscript(Var("x"),[Var("k")])),For(VarDef("v"),Matrix([[Int(1),Int(2),Int(3),Int(6)]]),Stats([Assign(Var("data_x"),"=",Subscript(Var("soft_xor"),[Var("data_x"),Subscript(Var("dvbt_receive_conv_register"),[Var("v")])]))])),Assign(Var("data_y"),"=",Subscript(Var("y"),[Var("k")])),For(VarDef("v"),Matrix([[Int(2),Int(3),Int(5),Int(6)]]),Stats([Assign(Var("data_y"),"=",Subscript(Var("soft_xor"),[Var("data_y"),Subscript(Var("dvbt_receive_conv_register"),[Var("v")])]))])),Ifs([ElseIf(DataOp("&",[DataOp("==",[Var("data_x"),Float(5.000000000000000e-01)]),DataOp("==",[Var("data_y"),Float(5.000000000000000e-01)])]),Stats([Subscript(Var("fprintf"),[String("warning: undefined symbol %d\n"),Var("k")])]))],()),Ifs([ElseIf(DataOp("|",[DataOp("&",[DataOp("<",[Var("data_x"),Float(5.000000000000000e-01)]),DataOp(">",[Var("data_y"),Float(5.000000000000000e-01)])]),DataOp("&",[DataOp(">",[Var("data_x"),Float(5.000000000000000e-01)]),DataOp("<",[Var("data_y"),Float(5.000000000000000e-01)])])]),Stats([Subscript(Var("fprintf"),[String("warning: contradicting symbol %d\n"),Var("k")])]))],()),Ifs([ElseIf(DataOp("|",[DataOp("<",[Var("data_x"),Float(5.000000000000000e-01)]),DataOp("<",[Var("data_y"),Float(5.000000000000000e-01)])]),Stats([Assign(Subscript(Var("data"),[Var("k")]),"=",Int(0))])),ElseIf(DataOp("|",[DataOp(">",[Var("data_x"),Float(5.000000000000000e-01)]),DataOp(">",[Var("data_y"),Float(5.000000000000000e-01)])]),Stats([Assign(Subscript(Var("data"),[Var("k")]),"=",Int(1))]))],Else(Stats([Subscript(Var("fprintf"),[String("error: internal error at symbol %d\n"),Var("k")])]))),Assign(Var("dvbt_receive_conv_register"),"=",Matrix([[Subscript(Var("data"),[Var("k")]),Subscript(Var("dvbt_receive_conv_register"),[Range(Int(2),Int(1),Int(6))])]]))]))])),FunDec(VarDef("soft_xor"),[VarDef("a"),VarDef("b")],[VarDef("x")],Stats([Ifs([ElseIf(DataOp("<",[Var("b"),Float(5.000000000000000e-01)]),Stats([Assign(Var("x"),"=",Var("a"))])),ElseIf(DataOp("==",[Var("a"),Float(5.000000000000000e-01)]),Stats([Assign(Var("x"),"=",Float(5.000000000000000e-01))])),ElseIf(DataOp(">",[Var("b"),Float(5.000000000000000e-01)]),Stats([Assign(Var("x"),"=",DataOp("-",[Int(1),Var("a")]))]))],())]))])