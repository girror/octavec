Program([FunDec(VarDef("global_settings"),[],[],Stats([VarDef("PACKET_LENGTH"),VarDef("NET_PACKET_LENGTH"),VarDef("PACKETS_PER_PRBS_PERIOD"),VarDef("SYNC_BYTE_VALUE"),VarDef("INV_SYNC_BYTE_VALUE"),VarDef("INIT_PRBS_REGISTER"),VarDef("RS_PARITY_BYTES"),VarDef("OI_I"),VarDef("OI_M"),VarDef("INIT_CONV_REGISTER"),VarDef("PUNCTURING_MODE"),VarDef("QAM_MODE"),VarDef("LOG_QAM_MODE"),VarDef("OFDM_SYMBOL_SIZE"),VarDef("OFDM_SYMBOL_LENGTH"),VarDef("OFDM_SYMBOL_NET_LENGTH"),VarDef("FFT_SIZE"),Assign(Var("ffffffff"),"=",Subscript(Var("flipud"),[Matrix([[Int(1),Int(2)]])])),Assign(Var("sssssss"),"=",Subscript(Var("sqrt"),[Float(3.400000095367432e+00)])),Assign(Var("rrrrrrrr"),"=",Subscript(Var("rows"),[Matrix([[Int(1),Int(2)]])])),Assign(Var("ffxxxxxx"),"=",Subscript(Var("diff"),[Matrix([[Int(1),Int(2),Int(8)]]),Int(1)])),Assign(Var("PACKETS_PER_PRBS_PERIOD"),"=",Int(8)),Assign(Var("PACKET_LENGTH"),"=",Int(188)),Assign(Var("NET_PACKET_LENGTH"),"=",DataOp("-",[Var("PACKET_LENGTH"),Int(1)])),Assign(Var("SYNC_BYTE_VALUE"),"=",Subscript(Var("hex2dec"),[String("47")])),Assign(Var("INV_SYNC_BYTE_VALUE"),"=",Subscript(Var("hex2dec"),[String("b8")])),Assign(Var("INIT_PRBS_REGISTER"),"=",Matrix([[Int(1),Int(0),Int(0),Int(1),Int(0),Int(1),Int(0),Int(1),Int(0),Int(0),Int(0),Int(0),Int(0),Int(0),Int(0)]])),Assign(Var("RS_PARITY_BYTES"),"=",Int(16)),Assign(Var("OI_I"),"=",Int(12)),Assign(Var("OI_M"),"=",Int(17)),VarDef("SEND_OI_STATE"),Assign(Var("SEND_OI_STATE"),"=",Subscript(Var("zeros"),[Var("OI_I"),DataOp("+",[DataOp("*",[Var("OI_I"),Var("OI_M")]),Int(1)])])),VarDef("SEND_OI_POINTER"),Assign(Var("SEND_OI_POINTER"),"=",Int(0)),VarDef("RECEIVE_OI_STATE"),Assign(Var("RECEIVE_OI_STATE"),"=",Subscript(Var("zeros"),[Var("OI_I"),DataOp("+",[DataOp("*",[Var("OI_I"),Var("OI_M")]),Int(1)])])),VarDef("RECEIVE_OI_POINTER"),Assign(Var("RECEIVE_OI_POINTER"),"=",Int(0)),VarDef("OI_PACKETS_TO_TRASH"),Assign(Var("OI_PACKETS_TO_TRASH"),"=",Int(11)),Assign(Var("INIT_CONV_REGISTER"),"=",Subscript(Var("zeros"),[Int(1),Int(6)])),Assign(Var("PUNCTURING_MODE"),"=",Float(6.666666865348816e-01)),Assign(Var("QAM_MODE"),"=",Int(16)),Assign(Var("LOG_QAM_MODE"),"=",Subscript(Var("log2"),[Var("QAM_MODE")])),Assign(Var("OFDM_SYMBOL_SIZE"),"=",Int(1512)),Assign(Var("OFDM_SYMBOL_LENGTH"),"=",Int(6048)),Assign(Var("OFDM_SYMBOL_NET_LENGTH"),"=",DataOp("*",[Var("OFDM_SYMBOL_LENGTH"),Var("PUNCTURING_MODE")])),Assign(Var("FFT_SIZE"),"=",Int(2048)),VarDef("dvbt_send_current_packet"),VarDef("bit_stream"),VarDef("dvbt_receive_current_packet"),Assign(Var("dvbt_send_current_packet"),"=",Int(0)),Assign(Var("bit_stream"),"=",Matrix([])),Assign(Var("dvbt_receive_current_packet"),"=",DataOp("-",[Var("OI_PACKETS_TO_TRASH")])),VarDef("byte_stream"),Assign(Var("byte_stream"),"=",Matrix([])),VarDef("dvbt_send_conv_register"),Assign(Var("dvbt_send_conv_register"),"=",Var("INIT_CONV_REGISTER")),VarDef("dvbt_receive_conv_register"),Assign(Var("dvbt_receive_conv_register"),"=",Var("INIT_CONV_REGISTER")),VarDef("II_BLOCK_SIZE"),Assign(Var("II_BLOCK_SIZE"),"=",Int(126)),Assign(Var("Nmax"),"=",Int(1512)),Assign(Var("Mmax"),"=",Int(2048)),VarDef("Hq"),Assign(Var("Hq"),"=",Subscript(Var("zeros"),[Var("Nmax"),Int(1)])),Assign(Var("q"),"=",Int(0)),Assign(Var("Nr"),"=",Int(11)),For(VarDef("i"),Range(Int(0),Int(1),DataOp("-",[Var("Mmax"),Int(1)])),Stats([Switch(Var("i"),[Case(Int(0),Stats([Assign(Var("r1"),"=",Subscript(Var("zeros"),[Int(1),DataOp("-",[Var("Nr"),Int(1)])]))])),Case(Int(1),Stats([Assign(Var("r1"),"=",Subscript(Var("zeros"),[Int(1),DataOp("-",[Var("Nr"),Int(1)])]))])),Case(Int(2),Stats([Assign(Var("r1"),"=",Subscript(Var("zeros"),[Int(1),DataOp("-",[Var("Nr"),Int(1)])])),Assign(Subscript(Var("r1"),[Int(1)]),"=",Int(1))]))],Stats([Stats([Assign(Var("r1"),"=",Matrix([[Subscript(Var("r1"),[Range(Int(2),Int(1),DataOp("-",[Var("Nr"),Int(1)]))]),Subscript(Var("xor"),[Subscript(Var("r1"),[Int(1)]),Subscript(Var("r1"),[Int(4)])])]]))])])),Assign(Var("perm_table"),"=",Matrix([[Int(4),Int(3),Int(9),Int(6),Int(2),Int(8),Int(1),Int(5),Int(7),Int(0)]])),Assign(Var("r"),"=",Subscript(Var("zeros"),[Int(1),DataOp("-",[Var("Nr"),Int(1)])])),For(VarDef("k"),Range(Int(0),Int(1),DataOp("-",[Var("Nr"),Int(2)])),Stats([Assign(Subscript(Var("r"),[DataOp("+",[Int(1),Subscript(Var("perm_table"),[DataOp("+",[Int(1),Var("k")])])])]),"=",Subscript(Var("r1"),[DataOp("+",[Int(1),Var("k")])]))])),Assign(Subscript(Var("Hq"),[DataOp("+",[Int(1),Var("q")])]),"=",DataOp("*",[Subscript(Var("rem"),[Var("i"),Int(2)]),DataOp("^",[Int(2),DataOp("-",[Var("Nr"),Int(1)])])])),For(VarDef("j"),Range(Int(0),Int(1),DataOp("-",[Var("Nr"),Int(2)])),Stats([Assign(Subscript(Var("Hq"),[DataOp("+",[Int(1),Var("q")])]),"=",DataOp("+",[Subscript(Var("Hq"),[DataOp("+",[Int(1),Var("q")])]),DataOp("*",[Subscript(Var("r"),[DataOp("+",[Int(1),Var("j")])]),DataOp("^",[Int(2),Var("j")])])]))])),Ifs([ElseIf(DataOp("<",[Subscript(Var("Hq"),[DataOp("+",[Int(1),Var("q")])]),Var("Nmax")]),Stats([Assign(Var("q"),"=",DataOp("+",[Var("q"),Int(1)]))]))],())])),VarDef("SEND_EVEN_SYMBOL"),Assign(Var("SEND_EVEN_SYMBOL"),"=",Int(1)),VarDef("RECEIVE_EVEN_SYMBOL"),Assign(Var("RECEIVE_EVEN_SYMBOL"),"=",Int(1)),VarDef("QAM_TABLE"),Assign(Var("QAM_TABLE"),"=",Matrix([[Int(1000),Int(1010),Int(10),Int(0)],[Int(1001),Int(1011),Int(11),Int(1)],[Int(1101),Int(1111),Int(111),Int(101)],[Int(1100),Int(1110),Int(110),Int(100)]])),VarDef("QAM_ROW"),Assign(Var("QAM_ROW"),"=",Matrix([[Complex(Int(0),Int(3)),Complex(Int(0),Int(1)),Complex(Int(0),Int(-1)),Complex(Int(0),Int(-3))]])),VarDef("QAM_COL"),Assign(Var("QAM_COL"),"=",Matrix([[Int(-3),Int(-1),Int(1),Int(3)]])),VarDef("CARRIER_COUNT"),Assign(Var("CARRIER_COUNT"),"=",Int(1705)),VarDef("CCP_TABLE"),Assign(Var("CCP_TABLE"),"=",Matrix([[Int(0),Int(48),Int(54),Int(87),Int(141),Int(156),Int(192),Int(201),Int(255),Int(279),Int(282),Int(333),Int(432),Int(450),Int(483),Int(525),Int(531),Int(618),Int(636),Int(714),Int(759),Int(765),Int(780),Int(804),Int(873),Int(888),Int(918),Int(939),Int(942),Int(969),Int(984),Int(1050),Int(1101),Int(1107),Int(1110),Int(1137),Int(1140),Int(1146),Int(1206),Int(1269),Int(1323),Int(1377),Int(1491),Int(1683),Int(1704)]])),VarDef("REF_SEQUENCE"),Assign(Var("REF_SEQUENCE"),"=",Subscript(Var("zeros"),[Int(1),Var("CARRIER_COUNT")])),Assign(Var("reg"),"=",Subscript(Var("ones"),[Int(1),Int(11)])),For(VarDef("i"),Range(Int(1),Int(1),Var("CARRIER_COUNT")),Stats([Assign(Subscript(Var("REF_SEQUENCE"),[Var("i")]),"=",Subscript(Var("reg"),[Int(11)])),Assign(Var("new_bit"),"=",Subscript(Var("xor"),[Subscript(Var("reg"),[Int(9)]),Subscript(Var("reg"),[Int(11)])])),Assign(Var("reg"),"=",Matrix([[Var("new_bit"),Subscript(Var("reg"),[Range(Int(1),Int(1),Int(10))])]]))])),VarDef("TPS_TABLE"),Assign(Var("TPS_TABLE"),"=",Matrix([[Int(34),Int(50),Int(209),Int(346),Int(413),Int(569),Int(595),Int(688),Int(790),Int(901),Int(1073),Int(1219),Int(1262),Int(1286),Int(1469),Int(1594),Int(1687)]])),VarDef("SEND_FRAME_INDEX"),Assign(Var("SEND_FRAME_INDEX"),"=",Int(0)),VarDef("RECEIVE_FRAME_INDEX"),Assign(Var("RECEIVE_FRAME_INDEX"),"=",Int(0)),VarDef("FRAMES_PER_SUPERFRAME"),Assign(Var("FRAMES_PER_SUPERFRAME"),"=",Int(68)),VarDef("ALPHA"),Assign(Var("ALPHA"),"=",DataOp("/",[Int(1),Subscript(Var("sqrt"),[Int(10)])])),VarDef("GUARD_INTERVAL_DURATION"),Assign(Var("GUARD_INTERVAL_DURATION"),"=",Float(2.500000000000000e-01)),VarDef("OFDM_MODE"),Assign(Var("OFDM_MODE"),"=",Int(2048)),Subscript(Var("gf_init"),[Matrix([[Int(8),Int(4),Int(3),Int(2),Int(0)]])]),Subscript(Var("rs_init"),[Subscript(Var("hex2dec"),[String("02")]),Int(8)])])),FunDec(VarDef("flipud"),[VarDef("x")],[VarDef("y")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("flipud (x)")])]))],()),Assign(Var("nr"),"=",Subscript(Var("rows"),[Var("x")])),Assign(Var("y"),"=",Subscript(Var("x"),[Range(Var("nr"),Int(-1),Int(1)),Colon]))])),FunDec(VarDef("rows"),[VarDef("x")],[VarDef("nr")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("rows (x)")])]))],()),AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")]))])),FunDec(VarDef("diff"),[VarDef("x"),VarDef("k")],[VarDef("x")],Stats([Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Assign(Var("k"),"=",Int(1))])),ElseIf(DataOp("==",[Var("nargin"),Int(2)]),Stats([Ifs([ElseIf(DataOp("!",[DataOp("&&",[DataOp("&&",[Subscript(Var("is_scalar"),[Var("k")]),DataOp("==",[Var("k"),Subscript(Var("round"),[Var("k")])])]),DataOp(">=",[Var("k"),Int(0)])])]),Stats([Subscript(Var("error"),[String("diff: k must be a nonnegative integer")])])),ElseIf(DataOp("==",[Var("k"),Int(0)]),Stats([Return]))],())]))],Else(Stats([Subscript(Var("usage"),[String("diff (x, k")])]))),Ifs([ElseIf(Subscript(Var("isstr"),[Var("x")]),Stats([Subscript(Var("error"),[String("diff: symbolic differentiation not (yet) supported")])])),ElseIf(Subscript(Var("is_vector"),[Var("x")]),Stats([Assign(Var("n"),"=",Subscript(Var("length"),[Var("x")])),Ifs([ElseIf(DataOp("<=",[Var("n"),Var("k")]),Stats([Assign(Var("x"),"=",Matrix([]))]))],Else(Stats([For(VarDef("i"),Range(Int(1),Int(1),Var("k")),Stats([Assign(Var("x"),"=",DataOp("-",[Subscript(Var("x"),[Range(Int(2),Int(1),DataOp("+",[DataOp("-",[Var("n"),Var("i")]),Int(1)]))]),Subscript(Var("x"),[Range(Int(1),Int(1),DataOp("-",[Var("n"),Var("i")]))])]))]))])))])),ElseIf(Subscript(Var("is_matrix"),[Var("x")]),Stats([Assign(Var("n"),"=",Subscript(Var("rows"),[Var("x")])),Ifs([ElseIf(DataOp("<=",[Var("n"),Var("k")]),Stats([Assign(Var("x"),"=",Matrix([]))]))],Else(Stats([For(VarDef("i"),Range(Int(1),Int(1),Var("k")),Stats([Assign(Var("x"),"=",DataOp("-",[Subscript(Var("x"),[Range(Int(2),Int(1),DataOp("+",[DataOp("-",[Var("n"),Var("i")]),Int(1)])),Colon]),Subscript(Var("x"),[Range(Int(1),Int(1),DataOp("-",[Var("n"),Var("i")])),Colon])]))]))])))]))],Else(Stats([Assign(Var("x"),"=",Matrix([]))])))])),FunDec(VarDef("is_scalar"),[VarDef("x")],[VarDef("retval")],Stats([Assign(Var("retval"),"=",Int(0)),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Ifs([ElseIf(Subscript(Var("is_matrix"),[Var("x")]),Stats([AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")])),Assign(Var("retval"),"=",DataOp("&&",[DataOp("==",[Var("nr"),Int(1)]),DataOp("==",[Var("nc"),Int(1)])]))]))],())]))],Else(Stats([Subscript(Var("usage"),[String("is_scalar (x)")])])))])),FunDec(VarDef("is_vector"),[VarDef("x")],[VarDef("retval")],Stats([Assign(Var("retval"),"=",Int(0)),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Ifs([ElseIf(Subscript(Var("is_matrix"),[Var("x")]),Stats([AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")])),Assign(Var("retval"),"=",DataOp("||",[DataOp("&&",[DataOp("==",[Var("nr"),Int(1)]),DataOp(">=",[Var("nc"),Int(1)])]),DataOp("&&",[DataOp("==",[Var("nc"),Int(1)]),DataOp(">=",[Var("nr"),Int(1)])])]))]))],())]))],Else(Stats([Subscript(Var("usage"),[String("is_vector (x)")])])))])),FunDec(VarDef("hex2dec"),[VarDef("h")],[VarDef("d")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("hex2dec (b)")])]))],Else(Stats([Assign(Var("d"),"=",Subscript(Var("base2dec"),[Var("h"),Int(16)]))])))])),FunDec(VarDef("base2dec"),[VarDef("d"),VarDef("base")],[VarDef("out")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(2)]),Stats([Subscript(Var("usage"),[String("n = base2dec('d', base)")])]))],()),Assign(Var("symbols"),"=",String("0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ")),Ifs([ElseIf(Subscript(Var("isstr"),[Var("base")]),Stats([Assign(Var("symbols"),"=",Var("base")),Assign(Var("base"),"=",Subscript(Var("length"),[Var("symbols")])),Ifs([ElseIf(Subscript(Var("any"),[DataOp("==",[Subscript(Var("diff"),[Subscript(Var("sort"),[Subscript(Var("toascii"),[Var("symbols")])])]),Int(0)])]),Stats([Subscript(Var("error"),[String("base2dec: symbols representing digits must be unique.")])]))],())])),ElseIf(DataOp("!",[Subscript(Var("is_scalar"),[Var("base")])]),Stats([Subscript(Var("error"),[String("base2dec: cannot convert from several bases at once.")])])),ElseIf(DataOp("||",[DataOp("<",[Var("base"),Int(2)]),DataOp(">",[Var("base"),Subscript(Var("length"),[Var("symbols")])])]),Stats([Subscript(Var("error"),[String("base2dec: base must be between 2 and 36 or a string of symbols")])]))],Else(Stats([Assign(Var("d"),"=",Subscript(Var("toupper"),[Var("d")]))]))),Assign(Var("d"),"=",Subscript(Var("strjust"),[Var("d"),String("right")])),Assign(Var("table"),"=",DataOp("*",[Var("NaN"),Subscript(Var("ones"),[Int(256),Int(1)])])),Assign(Subscript(Var("table"),[Subscript(Var("toascii"),[Subscript(Var("symbols"),[Range(Int(1),Int(1),Var("base"))])])]),"=",Range(Int(0),Int(1),DataOp("-",[Var("base"),Int(1)]))),Assign(Subscript(Var("table"),[Subscript(Var("toascii"),[String(" ")])]),"=",Int(0)),Assign(Var("d"),"=",Subscript(Var("reshape"),[Subscript(Var("table"),[Subscript(Var("toascii"),[Var("d")])]),Subscript(Var("size"),[Var("d")])])),Assign(Var("out"),"=",DataOp("*",[Var("d"),DataOp(".^",[Var("base"),DataOp("'",[Range(DataOp("-",[Subscript(Var("columns"),[Var("d")]),Int(1)]),Int(-1),Int(0))])])]))])),FunDec(VarDef("strjust"),[VarDef("x"),VarDef("just")],[VarDef("x")],Stats([Ifs([ElseIf(DataOp("||",[DataOp("<",[Var("nargin"),Int(1)]),DataOp(">",[Var("nargin"),Int(2)])]),Stats([Subscript(Var("usage"),[String("strjust (s, ['left'|'right'|'center'])")])]))],()),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Assign(Var("just"),"=",String("right"))]))],()),Assign(Var("just"),"=",Subscript(Var("tolower"),[Var("just")])),Assign(Var("dfi"),"=",Var("do_fortran_indexing")),UnwindProtect(Stats([Assign(Var("do_fortran_indexing"),"=",Int(1)),Assign(Var("idx"),"=",Subscript(Var("find"),[DataOp("==",[Subscript(Var("toascii"),[Var("x")]),Int(0)])])),Ifs([ElseIf(DataOp("!",[Subscript(Var("isempty"),[Var("idx")])]),Stats([Assign(Subscript(Var("x"),[Var("idx")]),"=",String(" "))]))],()),AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")])),Assign(Var("idx"),"=",DataOp("!=",[DataOp("'",[Var("x")]),String(" ")])),Ifs([ElseIf(Subscript(Var("strcmp"),[Var("just"),String("right")]),Stats([AssignMulti([Var("N"),Var("hi")],"=",Subscript(Var("max"),[Subscript(Var("cumsum"),[Var("idx")])])),Assign(Var("shift"),"=",Var("hi"))])),ElseIf(Subscript(Var("strcmp"),[Var("just"),String("left")]),Stats([AssignMulti([Var("N"),Var("lo")],"=",Subscript(Var("max"),[Subscript(Var("cumsum"),[Subscript(Var("flipud"),[Var("idx")])])])),Assign(Var("shift"),"=",DataOp("-",[Var("nc"),Var("lo")]))]))],Else(Stats([AssignMulti([Var("N"),Var("hi")],"=",Subscript(Var("max"),[Subscript(Var("cumsum"),[Var("idx")])])),AssignMulti([Var("N"),Var("lo")],"=",Subscript(Var("max"),[Subscript(Var("cumsum"),[Subscript(Var("flipud"),[Var("idx")])])])),Assign(Var("shift"),"=",Subscript(Var("ceil"),[DataOp("-",[Var("nc"),DataOp("/",[DataOp("-",[Var("lo"),Var("hi")]),Int(2)])])]))]))),Assign(Var("idx"),"=",Subscript(Var("rem"),[DataOp("+",[DataOp("*",[Subscript(Var("ones"),[Var("nr"),Int(1)]),Matrix([[Range(Int(0),Int(1),DataOp("-",[Var("nc"),Int(1)]))]])]),DataOp("*",[DataOp("'",[Var("shift")]),Subscript(Var("ones"),[Int(1),Var("nc")])])]),Var("nc")])),Assign(Var("x"),"=",Subscript(Var("x"),[DataOp("+",[DataOp("*",[Var("idx"),Var("nr")]),DataOp("*",[DataOp("'",[Matrix([[Range(Int(1),Int(1),Var("nr"))]])]),Subscript(Var("ones"),[Int(1),Var("nc")])])])]))]),Stats([Assign(Var("do_fortran_indexing"),"=",Var("dfi"))]))])),FunDec(VarDef("strcmp"),[VarDef("s1"),VarDef("s2")],[VarDef("status")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(2)]),Stats([Subscript(Var("usage"),[String("strcmp (s, t)")])]))],()),Assign(Var("status"),"=",Int(0)),Ifs([ElseIf(DataOp("&&",[Subscript(Var("isstr"),[Var("s1")]),Subscript(Var("isstr"),[Var("s2")])]),Stats([AssignMulti([Var("r1"),Var("c1")],"=",Subscript(Var("size"),[Var("s1")])),AssignMulti([Var("r2"),Var("c2")],"=",Subscript(Var("size"),[Var("s2")])),Ifs([ElseIf(DataOp("&&",[DataOp("==",[Var("r1"),Var("r2")]),DataOp("==",[Var("c1"),Var("c2")])]),Stats([Ifs([ElseIf(DataOp("==",[Var("c1"),Int(0)]),Stats([Assign(Var("status"),"=",Int(1))]))],Else(Stats([Assign(Var("status"),"=",Subscript(Var("all"),[Subscript(Var("all"),[DataOp("==",[Var("s1"),Var("s2")])])]))])))]))],())]))],())])),FunDec(VarDef("rem"),[VarDef("x"),VarDef("y")],[VarDef("retval")],Stats([Assign(Var("usage_msg"),"=",String("rem (x, y)")),Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(2)]),Stats([Subscript(Var("usage"),[Var("usage_msg")])]))],()),Ifs([ElseIf(DataOp("&&",[Subscript(Var("any"),[DataOp("!=",[Subscript(Var("size"),[Var("x")]),Subscript(Var("size"),[Var("y")])])]),DataOp("!",[DataOp("||",[Subscript(Var("is_scalar"),[Var("x")]),Subscript(Var("is_scalar"),[Var("y")])])])]),Stats([Subscript(Var("error"),[String("rem: argument sizes must agree")])]))],()),Ifs([ElseIf(DataOp("||",[Subscript(Var("any"),[Subscript(Var("any"),[Subscript(Var("imag"),[Var("x")])])]),Subscript(Var("any"),[Subscript(Var("any"),[Subscript(Var("imag"),[Var("y")])])])]),Stats([Subscript(Var("error"),[String("rem: complex arguments are not allowed")])]))],()),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(2)]),Stats([Assign(Var("retval"),"=",DataOp("-",[Var("x"),DataOp(".*",[Var("y"),Subscript(Var("fix"),[DataOp("./",[Var("x"),Var("y")])])])]))]))],Else(Stats([Subscript(Var("error"),[Var("usage_msg")])])))])),FunDec(VarDef("reshape"),[VarDef("a"),VarDef("m"),VarDef("n")],[VarDef("retval")],Stats([Ifs([ElseIf(DataOp("&&",[DataOp("==",[Var("nargin"),Int(2)]),DataOp("==",[Subscript(Var("prod"),[Subscript(Var("size"),[Var("m")])]),Int(2)])]),Stats([Assign(Var("n"),"=",Subscript(Var("m"),[Int(2)])),Assign(Var("m"),"=",Subscript(Var("m"),[Int(1)])),Assign(Var("nargin"),"=",Int(3))]))],()),Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(3)]),Stats([AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("a")])),Ifs([ElseIf(DataOp("==",[DataOp("*",[Var("nr"),Var("nc")]),DataOp("*",[Var("m"),Var("n")])]),Stats([Assign(Var("retval"),"=",Subscript(Var("zeros"),[Var("m"),Var("n")])),Ifs([ElseIf(Subscript(Var("isstr"),[Var("a")]),Stats([Assign(Var("retval"),"=",Subscript(Var("setstr"),[Var("retval")]))]))],()),Assign(Subscript(Var("retval"),[Colon]),"=",Var("a"))]))],Else(Stats([Subscript(Var("error"),[String("reshape: sizes must match")])])))]))],Else(Stats([Subscript(Var("usage"),[String("reshape (a, m, n) or reshape (a, size (b))")])])))])),FunDec(VarDef("columns"),[VarDef("x")],[VarDef("nc")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("columns (x)")])]))],()),AssignMulti([Var("nr"),Var("nc")],"=",Subscript(Var("size"),[Var("x")]))])),FunDec(VarDef("log2"),[VarDef("x")],[VarDef("f"),VarDef("e")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("y = log2 (x) or [f, e] = log2 (x)")])]))],()),Ifs([ElseIf(DataOp("<",[Var("nargout"),Int(2)]),Stats([Assign(Var("f"),"=",DataOp("/",[Subscript(Var("log"),[Var("x")]),Subscript(Var("log"),[Int(2)])]))])),ElseIf(DataOp("==",[Var("nargout"),Int(2)]),Stats([Assign(Var("x"),"=",Subscript(Var("real"),[Var("x")])),Assign(Var("f"),"=",DataOp("+",[Subscript(Var("abs"),[Var("x")]),DataOp("==",[Var("x"),Int(0)])])),Assign(Var("e"),"=",DataOp(".*",[DataOp("+",[Subscript(Var("floor"),[DataOp("/",[Subscript(Var("log"),[Var("f")]),Subscript(Var("log"),[Int(2)])])]),Int(1)]),DataOp("!=",[Var("x"),Int(0)])])),Assign(Var("f"),"=",DataOp("./",[DataOp(".*",[Subscript(Var("sign"),[Var("x")]),Var("f")]),DataOp(".^",[Int(2),Var("e")])]))]))],Else(Stats([Subscript(Var("error"),[String("log2 takes at most 2 output arguments")])])))])),FunDec(VarDef("xor"),[VarDef("x"),VarDef("y")],[VarDef("z")],Stats([Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(2)]),Stats([Ifs([ElseIf(DataOp("||",[DataOp("||",[Subscript(Var("is_scalar"),[Var("x")]),Subscript(Var("is_scalar"),[Var("y")])]),DataOp("==",[Subscript(Var("size"),[Var("x")]),Subscript(Var("size"),[Var("y")])])]),Stats([Assign(Var("z"),"=",Subscript(Var("logical"),[DataOp("-",[DataOp("|",[Var("x"),Var("y")]),DataOp("&",[Var("x"),Var("y")])])]))]))],Else(Stats([Subscript(Var("error"),[String("xor: x and y must be of common size or scalars")])])))]))],Else(Stats([Subscript(Var("usage"),[String("xor (x, y)")])])))])),FunDec(VarDef("logical"),[VarDef("x")],[VarDef("y")],Stats([Ifs([ElseIf(DataOp("==",[Var("nargin"),Int(1)]),Stats([Ifs([ElseIf(DataOp("||",[Subscript(Var("islogical"),[Var("x")]),Subscript(Var("isempty"),[Var("x")])]),Stats([Assign(Var("y"),"=",Var("x"))])),ElseIf(Subscript(Var("isnumeric"),[Var("x")]),Stats([Assign(Var("y"),"=",DataOp("!=",[Var("x"),Int(0)]))]))],Else(Stats([Subscript(Var("error"),[String("logical not defined for type `%s'"),Subscript(Var("typeinfo"),[Var("x")])])])))]))],Else(Stats([Subscript(Var("usage"),[String("logical (x)")])])))])),FunDec(VarDef("gf_init"),[VarDef("field_generator_coeff")],[],Stats([VarDef("GFLOG"),VarDef("GFEXP"),Assign(Var("field_generator_coeff"),"=",Subscript(Var("sort"),[Var("field_generator_coeff")])),Assign(Var("w"),"=",Subscript(Var("max"),[Var("field_generator_coeff")])),Assign(Var("n"),"=",DataOp("^",[Int(2),Var("w")])),Assign(Var("field_generator"),"=",Subscript(Var("zeros"),[Int(1),DataOp("+",[Var("w"),Int(1)])])),For(VarDef("k"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("field_generator_coeff")])),Stats([Assign(Subscript(Var("field_generator"),[DataOp("+",[Int(1),Subscript(Var("field_generator_coeff"),[Var("k")])])]),"=",Int(1))])),Assign(Var("GFLOG"),"=",Subscript(Var("zeros"),[DataOp("-",[Var("n"),Int(1)]),Int(1)])),Assign(Var("GFEXP"),"=",Subscript(Var("zeros"),[DataOp("-",[Var("n"),Int(1)]),Int(1)])),Assign(Var("pe"),"=",Subscript(Var("zeros"),[Int(1),DataOp("+",[Var("w"),Int(1)])])),Assign(Subscript(Var("pe"),[Int(1)]),"=",Int(1)),For(VarDef("k"),Range(Int(1),Int(1),DataOp("-",[Var("n"),Int(1)])),Stats([Assign(Var("value"),"=",Int(0)),For(VarDef("l"),Range(Int(0),Int(1),DataOp("-",[Var("w"),Int(1)])),Stats([Ifs([ElseIf(DataOp("==",[Subscript(Var("pe"),[DataOp("+",[Int(1),Var("l")])]),Int(1)]),Stats([Assign(Var("value"),"=",DataOp("+",[Var("value"),DataOp("^",[Int(2),Var("l")])]))]))],())])),Assign(Subscript(Var("GFEXP"),[Var("k")]),"=",Var("value")),Assign(Subscript(Var("GFLOG"),[Var("value")]),"=",Var("k")),Assign(Var("pe"),"=",Matrix([[Int(0),Subscript(Var("pe"),[Range(Int(1),Int(1),Var("w"))])]])),Ifs([ElseIf(DataOp("==",[Subscript(Var("pe"),[DataOp("+",[Var("w"),Int(1)])]),Int(1)]),Stats([Assign(Var("pe"),"=",Subscript(Var("xor"),[Var("pe"),Var("field_generator")]))]))],())]))])),FunDec(VarDef("rs_init"),[VarDef("alpha"),VarDef("t")],[],Stats([VarDef("RS_GENERATOR"),Assign(Var("RS_GENERATOR"),"=",Subscript(Var("zeros"),[DataOp("+",[DataOp("*",[Int(2),Var("t")]),Int(1)]),Int(1)])),Assign(Subscript(Var("RS_GENERATOR"),[Int(1)]),"=",Var("alpha")),Assign(Subscript(Var("RS_GENERATOR"),[Int(2)]),"=",Int(1)),For(VarDef("k"),Range(Int(3),Int(1),DataOp("+",[DataOp("*",[Int(2),Var("t")]),Int(1)])),Stats([Assign(Subscript(Var("RS_GENERATOR"),[Var("k")]),"=",Int(1)),For(VarDef("l"),Range(DataOp("-",[Var("k"),Int(1)]),Int(-1),Int(2)),Stats([Assign(Subscript(Var("RS_GENERATOR"),[Var("l")]),"=",Subscript(Var("gf_add"),[Subscript(Var("RS_GENERATOR"),[DataOp("-",[Var("l"),Int(1)])]),Subscript(Var("gf_mul"),[Var("alpha"),Subscript(Var("RS_GENERATOR"),[Var("l")])])]))])),Assign(Subscript(Var("RS_GENERATOR"),[Int(1)]),"=",Subscript(Var("gf_mul"),[Var("alpha"),Subscript(Var("RS_GENERATOR"),[Int(1)])]))]))])),FunDec(VarDef("gf_add"),[VarDef("a"),VarDef("b")],[VarDef("result")],Stats([Assign(Var("result"),"=",Subscript(Var("byte_xor"),[Var("a"),Var("b")]))])),FunDec(VarDef("gf_mul"),[VarDef("a"),VarDef("b")],[VarDef("result")],Stats([VarDef("GFLOG"),VarDef("GFEXP"),Ifs([ElseIf(DataOp("|",[DataOp("==",[Var("a"),Int(0)]),DataOp("==",[Var("b"),Int(0)])]),Stats([Assign(Var("result"),"=",Int(0))]))],Else(Stats([Assign(Var("log_result"),"=",DataOp("+",[Subscript(Var("GFLOG"),[Var("a")]),Subscript(Var("GFLOG"),[Var("b")])])),While(DataOp(">",[Var("log_result"),Subscript(Var("length"),[Var("GFEXP")])]),Stats([Assign(Var("log_result"),"=",DataOp("-",[Var("log_result"),Subscript(Var("length"),[Var("GFEXP")])]))])),Assign(Var("result"),"=",Subscript(Var("GFEXP"),[Var("log_result")]))])))])),FunDec(VarDef("byte_xor"),[VarDef("byte_vector1"),VarDef("byte_vector2")],[VarDef("result")],Stats([Assign(Var("result"),"=",Var("byte_vector1")),For(VarDef("i"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("byte_vector1")])),Stats([Assign(Var("byte1"),"=",Subscript(Var("byte_vector1"),[Var("i")])),Assign(Var("byte2"),"=",Subscript(Var("byte_vector2"),[Var("i")])),Assign(Var("result_byte"),"=",Int(0)),For(VarDef("j"),Range(Int(1),Int(1),Int(8)),Stats([Assign(Var("bit1"),"=",Subscript(Var("rem"),[Var("byte1"),Int(2)])),Assign(Var("bit2"),"=",Subscript(Var("rem"),[Var("byte2"),Int(2)])),Assign(Var("result_bit"),"=",Subscript(Var("xor"),[Var("bit1"),Var("bit2")])),Assign(Var("result_byte"),"=",DataOp("+",[Var("result_byte"),DataOp("*",[Var("result_bit"),DataOp("^",[Int(2),DataOp("-",[Var("j"),Int(1)])])])])),Assign(Var("byte1"),"=",Subscript(Var("fix"),[DataOp("/",[Var("byte1"),Int(2)])])),Assign(Var("byte2"),"=",Subscript(Var("fix"),[DataOp("/",[Var("byte2"),Int(2)])]))])),Assign(Subscript(Var("result"),[Var("i")]),"=",Var("result_byte"))]))])),FunDec(VarDef("dvbt_send"),[VarDef("data_in")],[VarDef("data_channel_in")],Stats([Subscript(Var("fprintf"),[String("  dvbt_send (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("PACKETS_PER_PRBS_PERIOD"),VarDef("OFDM_SYMBOL_LENGTH"),VarDef("OFDM_SYMBOL_NET_LENGTH"),VarDef("OFDM_SYMBOL_SIZE"),VarDef("CARRIER_COUNT"),VarDef("GUARD_INTERVAL_DURATION"),VarDef("OFDM_MODE"),VarDef("dvbt_send_current_packet"),VarDef("dvbt_send_prbs_register"),VarDef("dvbt_send_conv_regigster"),VarDef("bit_stream"),AssignMulti([Var("should_be_packet_size"),Var("num_packets")],"=",Subscript(Var("size"),[Var("data_in")])),For(VarDef("i"),Range(Int(1),Int(1),Var("num_packets")),Stats([Assign(Var("data"),"=",Subscript(Var("data_in"),[Colon,Var("i")])),Assign(Var("data"),"=",Subscript(Var("sync_and_scramble"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("rs_encode"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("outer_interleave"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("bit_from_byte_vector"),[Var("data")])),Ifs([ElseIf(Subscript(Var("isempty"),[Var("bit_stream")]),Stats([Assign(Var("bit_stream"),"=",Var("data"))]))],Else(Stats([Assign(Var("bit_stream"),"=",Matrix([[Var("bit_stream")],[Var("data")]]))])))])),AssignMulti([Var("num_bits"),Var("should_be_one")],"=",Subscript(Var("size"),[Var("bit_stream")])),Assign(Var("num_symbols"),"=",Subscript(Var("floor"),[DataOp("/",[Var("num_bits"),Var("OFDM_SYMBOL_NET_LENGTH")])])),Assign(Var("ofdm_symbols"),"=",Subscript(Var("zeros"),[Var("OFDM_SYMBOL_NET_LENGTH"),Var("num_symbols")])),For(VarDef("i"),Range(Int(1),Int(1),Var("num_symbols")),Stats([Assign(Subscript(Var("ofdm_symbols"),[Colon,Var("i")]),"=",Subscript(Var("bit_stream"),[Range(DataOp("+",[Int(1),DataOp("*",[DataOp("-",[Var("i"),Int(1)]),Var("OFDM_SYMBOL_NET_LENGTH")])]),Int(1),DataOp("*",[Var("i"),Var("OFDM_SYMBOL_NET_LENGTH")]))]))])),Ifs([ElseIf(DataOp("!",[Subscript(Var("isempty"),[Var("bit_stream")])]),Stats([Assign(Var("bit_stream"),"=",Subscript(Var("bit_stream"),[Range(DataOp("+",[Int(1),DataOp("*",[Var("num_symbols"),Var("OFDM_SYMBOL_NET_LENGTH")])]),Int(1),Var("num_bits"))]))]))],()),Assign(Var("guard_length"),"=",Subscript(Var("ceil"),[DataOp("*",[Var("OFDM_MODE"),Var("GUARD_INTERVAL_DURATION")])])),Assign(Var("data_channel_in"),"=",Subscript(Var("zeros"),[DataOp("+",[Var("OFDM_MODE"),Var("guard_length")]),Var("num_symbols")])),For(VarDef("i"),Range(Int(1),Int(1),Var("num_symbols")),Stats([Assign(Var("data"),"=",Subscript(Var("ofdm_symbols"),[Colon,Var("i")])),AssignMulti([Var("x"),Var("y")],"=",Subscript(Var("convolutional_encode"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("puncturing"),[Var("x"),Var("y")])),Assign(Var("symbols"),"=",Subscript(Var("inner_interleave"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("map"),[Var("symbols")])),Assign(Var("data"),"=",Subscript(Var("insert_reference_signals"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("ofdm_encode"),[Var("data")])),Assign(Subscript(Var("data_channel_in"),[Colon,Var("i")]),"=",Var("data"))]))])),FunDec(VarDef("sync_and_scramble"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    sync_and_scramble (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("PACKET_LENGTH"),VarDef("NET_PACKET_LENGTH"),VarDef("PACKETS_PER_PRBS_PERIOD"),VarDef("SYNC_BYTE_VALUE"),VarDef("INV_SYNC_BYTE_VALUE"),VarDef("INIT_PRBS_REGISTER"),VarDef("dvbt_send_current_packet"),VarDef("dvbt_send_prbs_register"),VarDef("dvbt_send_convolution_state"),Ifs([ElseIf(DataOp("==",[Var("dvbt_send_current_packet"),Int(0)]),Stats([Assign(Var("dvbt_send_prbs_register"),"=",Var("INIT_PRBS_REGISTER")),Assign(Var("sync_byte"),"=",Var("INV_SYNC_BYTE_VALUE"))]))],Else(Stats([Subscript(Var("dvbt_send_current_packet"),[Int(1)]),Assign(Var("sync_byte"),"=",Var("SYNC_BYTE_VALUE"))]))),AssignMulti([Var("prbs"),Var("dvbt_send_prbs_register")],"=",Subscript(Var("prbs_sequence"),[Var("NET_PACKET_LENGTH"),Var("dvbt_send_prbs_register")])),Assign(Var("data_out"),"=",Matrix([[Var("sync_byte")],[Subscript(Var("byte_xor"),[Var("data_in"),Var("prbs")])]])),Assign(Var("dvbt_send_current_packet"),"=",Subscript(Var("rem"),[DataOp("+",[Var("dvbt_send_current_packet"),Int(1)]),Var("PACKETS_PER_PRBS_PERIOD")]))])),FunDec(VarDef("prbs_sequence"),[VarDef("byte_length"),VarDef("prbs_register")],[VarDef("sequence"),VarDef("prbs_register_out")],Stats([Subscript(Var("fprintf"),[String("      prbs_sequence\n")]),Assign(Var("bit_length"),"=",DataOp("*",[Int(8),Var("byte_length")])),Assign(Var("bit_sequence"),"=",Subscript(Var("zeros"),[Var("bit_length"),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Var("bit_length")),Stats([Assign(Var("new_bit"),"=",Subscript(Var("xor"),[Subscript(Var("prbs_register"),[Int(14)]),Subscript(Var("prbs_register"),[Int(15)])])),Assign(Var("prbs_register"),"=",Matrix([[Var("new_bit"),Subscript(Var("prbs_register"),[Range(Int(1),Int(1),Int(14))])]])),Assign(Subscript(Var("bit_sequence"),[Var("i")]),"=",Var("new_bit"))])),Assign(Var("sequence"),"=",Subscript(Var("zeros"),[Int(1),Var("byte_length")])),For(VarDef("i"),Range(Int(1),Int(1),Var("byte_length")),Stats([For(VarDef("j"),Range(Int(1),Int(1),Int(8)),Stats([Assign(Subscript(Var("sequence"),[Var("i")]),"=",DataOp("+",[Subscript(Var("sequence"),[Var("i")]),DataOp("*",[Subscript(Var("bit_sequence"),[DataOp("+",[DataOp("*",[Int(8),DataOp("-",[Var("i"),Int(1)])]),Var("j")])]),DataOp("^",[Int(2),DataOp("-",[Int(8),Var("j")])])])]))]))])),Assign(Var("prbs_register_out"),"=",Var("prbs_register"))])),FunDec(VarDef("rs_encode"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    rs_encode (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("PACKET_LENGTH"),VarDef("RS_PARITY_BYTES"),Assign(Var("d"),"=",Var("RS_PARITY_BYTES")),Assign(Var("parity"),"=",Subscript(Var("zeros"),[Var("d"),Int(1)])),Assign(Var("data"),"=",Matrix([[Var("data_in")],[Subscript(Var("zeros"),[DataOp("-",[Int(239),Subscript(Var("length"),[Var("data_in")])]),Int(1)])]])),For(VarDef("k"),Range(Subscript(Var("length"),[Var("data")]),Int(-1),Int(1)),Stats([Assign(Var("feedback"),"=",Subscript(Var("gf_add"),[Subscript(Var("data"),[Var("k")]),Subscript(Var("parity"),[Var("d")])])),Ifs([ElseIf(DataOp("!=",[Var("feedback"),Int(0)]),Stats([For(VarDef("l"),Range(Var("d"),Int(-1),Int(2)),Stats([Assign(Subscript(Var("parity"),[Var("l")]),"=",Subscript(Var("gf_add"),[Subscript(Var("parity"),[DataOp("-",[Var("l"),Int(1)])]),Subscript(Var("gf_mul"),[Var("feedback"),Subscript(Var("parity"),[Var("l")])])]))])),Assign(Subscript(Var("parity"),[Int(1)]),"=",Subscript(Var("gf_mul"),[Var("feedback"),Subscript(Var("parity"),[DataOp("-",[Var("l"),Int(1)])])]))]))],Else(Stats([Assign(Var("parity"),"=",Matrix([[Int(0)],[Subscript(Var("parity"),[Range(Int(1),Int(1),DataOp("-",[Var("d"),Int(1)]))])]]))])))])),Assign(Var("data_out"),"=",Matrix([[Var("data_in")],[Var("parity")]]))])),FunDec(VarDef("outer_interleave"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    outer_interleave (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("PACKET_LENGTH"),VarDef("RS_PARITY_BYTES"),VarDef("OI_I"),VarDef("OI_M"),VarDef("SEND_OI_STATE"),VarDef("SEND_OI_POINTER"),AssignMulti([Var("num_bytes"),Var("should_be_one")],"=",Subscript(Var("size"),[Var("data_in")])),Assign(Var("data_out"),"=",Subscript(Var("zeros"),[Var("num_bytes"),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Var("num_bytes")),Stats([Assign(Var("byte"),"=",Subscript(Var("data_in"),[Var("i")])),Assign(Var("k"),"=",Var("SEND_OI_POINTER")),Assign(Var("q"),"=",DataOp("*",[Var("k"),Var("OI_M")])),Assign(Subscript(Var("SEND_OI_STATE"),[DataOp("+",[Int(1),Var("k")]),Range(Int(1),Int(1),DataOp("+",[Var("q"),Int(1)]))]),"=",Matrix([[Var("byte"),Subscript(Var("SEND_OI_STATE"),[DataOp("+",[Int(1),Var("k")]),Range(Int(1),Int(1),Var("q"))])]])),Assign(Subscript(Var("data_out"),[Var("i")]),"=",Subscript(Var("SEND_OI_STATE"),[DataOp("+",[Int(1),Var("k")]),DataOp("+",[Var("q"),Int(1)])])),Assign(Var("SEND_OI_POINTER"),"=",Subscript(Var("rem"),[DataOp("+",[Var("SEND_OI_POINTER"),Int(1)]),Var("OI_I")]))]))])),FunDec(VarDef("bit_from_byte_vector"),[VarDef("data_in")],[VarDef("data_out")],Stats([Assign(Var("data_out"),"=",Subscript(Var("zeros"),[DataOp("*",[Subscript(Var("length"),[Var("data_in")]),Int(8)]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("data_in")])),Stats([Assign(Var("data_byte"),"=",Subscript(Var("data_in"),[Var("i")])),For(VarDef("j"),Range(Int(1),Int(1),Int(8)),Stats([Ifs([ElseIf(DataOp(">=",[Var("data_byte"),Float(1.275000000000000e+02)]),Stats([Assign(Subscript(Var("data_out"),[DataOp("+",[DataOp("*",[Int(8),DataOp("-",[Var("i"),Int(1)])]),Var("j")])]),"=",Int(1))]))],()),Assign(Var("data_byte"),"=",DataOp("*",[Subscript(Var("rem"),[Var("data_byte"),Int(128)]),Int(2)]))]))]))])),FunDec(VarDef("channel_model"),[VarDef("data_channel_in")],[VarDef("data_channel_out")],Stats([Subscript(Var("fprintf"),[String("  channel_model (%d)\n"),Subscript(Var("length"),[Var("data_channel_in")])]),Assign(Var("data_channel_out"),"=",Var("data_channel_in"))])),FunDec(VarDef("dvbt_receive"),[VarDef("data_channel_out")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("  dvbt_receive (%d)\n"),Subscript(Var("length"),[Var("data_channel_out")])]),VarDef("PACKETS_PER_PRBS_PERIOD"),VarDef("PACKET_LENGTH"),VarDef("RS_PARITY_BYTES"),VarDef("NET_PACKET_LENGTH"),VarDef("PUNCTURING_MODE"),VarDef("dvbt_receive_current_packet"),VarDef("dvbt_receive_prbs_register"),VarDef("dvbt_receive_conv_regigster"),VarDef("byte_stream"),AssignMulti([Var("should_be_carrier_count"),Var("num_symbols")],"=",Subscript(Var("size"),[Var("data_channel_out")])),For(VarDef("i"),Range(Int(1),Int(1),Var("num_symbols")),Stats([Assign(Var("data"),"=",Subscript(Var("data_channel_out"),[Colon,Var("i")])),Assign(Var("data"),"=",Subscript(Var("ofdm_decode"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("remove_reference_signals"),[Var("data")])),Assign(Var("symbols"),"=",Subscript(Var("demap"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("inner_deinterleave"),[Var("symbols")])),AssignMulti([Var("x"),Var("y")],"=",Subscript(Var("depuncturing"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("convolutional_decode"),[Var("x"),Var("y")])),Assign(Var("data"),"=",Subscript(Var("byte_from_bit_vector"),[Var("data")])),Ifs([ElseIf(Subscript(Var("isempty"),[Var("byte_stream")]),Stats([Assign(Var("byte_stream"),"=",Var("data"))]))],Else(Stats([Assign(Var("byte_stream"),"=",Matrix([[Var("byte_stream")],[Var("data")]]))])))])),AssignMulti([Var("num_bytes"),Var("should_be_one")],"=",Subscript(Var("size"),[Var("byte_stream")])),Assign(Var("p"),"=",DataOp("+",[Var("PACKET_LENGTH"),Var("RS_PARITY_BYTES")])),Assign(Var("num_packets"),"=",Subscript(Var("floor"),[DataOp("/",[Var("num_bytes"),Var("p")])])),Assign(Var("packets"),"=",Subscript(Var("zeros"),[Var("p"),Var("num_packets")])),For(VarDef("i"),Range(Int(1),Int(1),Var("num_packets")),Stats([Assign(Subscript(Var("packets"),[Colon,Var("i")]),"=",Subscript(Var("byte_stream"),[Range(DataOp("+",[Int(1),DataOp("*",[DataOp("-",[Var("i"),Int(1)]),Var("p")])]),Int(1),DataOp("*",[Var("i"),Var("p")]))]))])),Ifs([ElseIf(DataOp("!",[Subscript(Var("isempty"),[Var("byte_stream")])]),Stats([Assign(Var("byte_stream"),"=",Subscript(Var("byte_stream"),[Range(DataOp("+",[Int(1),DataOp("*",[Var("num_packets"),Var("p")])]),Int(1),Var("num_bytes"))]))]))],()),Assign(Var("data_out"),"=",Subscript(Var("zeros"),[Var("NET_PACKET_LENGTH"),Var("num_packets")])),For(VarDef("i"),Range(Int(1),Int(1),Var("num_packets")),Stats([Assign(Var("data"),"=",Subscript(Var("packets"),[Colon,Var("i")])),Assign(Var("data"),"=",Subscript(Var("outer_deinterleave"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("rs_decode"),[Var("data")])),Assign(Var("data"),"=",Subscript(Var("remove_sync_and_unscramble"),[Var("data")])),Assign(Subscript(Var("data_out"),[Colon,Var("i")]),"=",Var("data"))]))])),FunDec(VarDef("convolutional_encode"),[VarDef("data")],[VarDef("x"),VarDef("y")],Stats([Subscript(Var("fprintf"),[String("    convolutional_encode (%d)\n"),Subscript(Var("length"),[Var("data")])]),VarDef("INIT_CONV_REGISTER"),VarDef("dvbt_send_current_packet"),VarDef("dvbt_send_conv_register"),Assign(Var("x"),"=",Subscript(Var("zeros"),[Subscript(Var("length"),[Var("data")]),Int(1)])),Assign(Var("y"),"=",Subscript(Var("zeros"),[Subscript(Var("length"),[Var("data")]),Int(1)])),For(VarDef("k"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("data")])),Stats([Assign(Var("data_in"),"=",Subscript(Var("data"),[Var("k")])),Assign(Subscript(Var("x"),[Var("k")]),"=",Var("data_in")),For(VarDef("v"),Matrix([[Int(1),Int(2),Int(3),Int(6)]]),Stats([Assign(Subscript(Var("x"),[Var("k")]),"=",Subscript(Var("xor"),[Subscript(Var("x"),[Var("k")]),Subscript(Var("dvbt_send_conv_register"),[Var("v")])]))])),Assign(Subscript(Var("y"),[Var("k")]),"=",Var("data_in")),For(VarDef("v"),Matrix([[Int(2),Int(3),Int(5),Int(6)]]),Stats([Assign(Subscript(Var("y"),[Var("k")]),"=",Subscript(Var("xor"),[Subscript(Var("y"),[Var("k")]),Subscript(Var("dvbt_send_conv_register"),[Var("v")])]))])),Assign(Var("dvbt_send_conv_register"),"=",Matrix([[Var("data_in"),Subscript(Var("dvbt_send_conv_register"),[Range(Int(2),Int(1),Int(6))])]]))]))])),FunDec(VarDef("puncturing"),[VarDef("x"),VarDef("y")],[VarDef("data")],Stats([Subscript(Var("fprintf"),[String("    puncturing (%d)\n"),Subscript(Var("length"),[Var("x")])]),VarDef("PUNCTURING_MODE"),Switch(Var("PUNCTURING_MODE"),[Case(Float(5.000000000000000e-01),Stats([Assign(Var("data"),"=",Subscript(Var("zeros"),[DataOp("*",[Int(2),Subscript(Var("length"),[Var("x")])]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("x")])),Stats([Assign(Subscript(Var("data"),[DataOp("+",[DataOp("*",[Int(2),DataOp("-",[Var("i"),Int(1)])]),Int(1)])]),"=",Subscript(Var("x"),[Var("i")])),Assign(Subscript(Var("data"),[DataOp("+",[DataOp("*",[Int(2),DataOp("-",[Var("i"),Int(1)])]),Int(2)])]),"=",Subscript(Var("y"),[Var("i")]))]))])),Case(Float(6.666666865348816e-01),Stats([Assign(Var("data"),"=",Subscript(Var("zeros"),[DataOp("/",[DataOp("*",[Int(3),Subscript(Var("length"),[Var("x")])]),Int(2)]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(2),Subscript(Var("length"),[Var("x")])),Stats([Assign(Subscript(Var("data"),[DataOp("+",[DataOp("/",[DataOp("*",[Int(3),DataOp("-",[Var("i"),Int(1)])]),Int(2)]),Int(1)])]),"=",Subscript(Var("x"),[Var("i")])),Assign(Subscript(Var("data"),[DataOp("+",[DataOp("/",[DataOp("*",[Int(3),DataOp("-",[Var("i"),Int(1)])]),Int(2)]),Int(2)])]),"=",Subscript(Var("y"),[Var("i")])),Assign(Subscript(Var("data"),[DataOp("+",[DataOp("/",[DataOp("*",[Int(3),DataOp("-",[Var("i"),Int(1)])]),Int(2)]),Int(3)])]),"=",Subscript(Var("y"),[DataOp("+",[Var("i"),Int(1)])]))]))]))],Stats([Stats([Subscript(Var("fprintf"),[String("puncturing mode %g not implemented.\n"),Var("PUNCTURING_MODE")]),Return])]))])),FunDec(VarDef("inner_interleave"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    inner_interleave (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("II_BLOCK_SIZE"),VarDef("OFDM_SYMBOL_SIZE"),VarDef("QAM_MODE"),VarDef("SEND_EVEN_SYMBOL"),VarDef("Hq"),Assign(Var("sblock_size"),"=",DataOp("*",[Var("II_BLOCK_SIZE"),Subscript(Var("log2"),[Var("QAM_MODE")])])),AssignMulti([Var("symbol_size"),Var("should_be_one")],"=",Subscript(Var("size"),[Var("data_in")])),Assign(Var("num_blocks"),"=",DataOp("/",[Var("symbol_size"),Var("sblock_size")])),Ifs([ElseIf(DataOp("!=",[Subscript(Var("rem"),[Var("symbol_size"),Var("sblock_size")]),Int(0)]),Stats([Subscript(Var("fprintf"),[String("error: symbol size %d does not match block size %d\n"),Var("symbol_size"),Var("sblock_size")]),Return]))],()),Assign(Var("y"),"=",Subscript(Var("zeros"),[Var("OFDM_SYMBOL_SIZE"),Subscript(Var("log2"),[Var("QAM_MODE")])])),For(VarDef("i"),Range(Int(1),Int(1),Var("num_blocks")),Stats([Assign(Var("x"),"=",Subscript(Var("data_in"),[Range(DataOp("+",[Int(1),DataOp("*",[DataOp("-",[Var("i"),Int(1)]),Var("sblock_size")])]),Int(1),DataOp("*",[Var("i"),Var("sblock_size")]))])),Assign(Var("a"),"=",DataOp("'",[Subscript(Var("reshape"),[Var("x"),Subscript(Var("log2"),[Var("QAM_MODE")]),Var("II_BLOCK_SIZE")])])),Assign(Var("b"),"=",Subscript(Var("zeros"),[Var("II_BLOCK_SIZE"),Subscript(Var("log2"),[Var("QAM_MODE")])])),Switch(Var("QAM_MODE"),[Case(Int(4),Stats([Assign(Var("mapping"),"=",Matrix([[Int(0),Int(1)]]))])),Case(Int(16),Stats([Assign(Var("mapping"),"=",Matrix([[Int(0),Int(2),Int(1),Int(3)]]))])),Case(Int(64),Stats([Assign(Var("mapping"),"=",Matrix([[Int(0),Int(2),Int(4),Int(1),Int(3),Int(5)]]))]))],Stats([Stats([Subscript(Var("fprintf"),[String("inner interleave: QAM mode %g not implemented.\n"),Var("QAM_MODE")]),Return])])),For(VarDef("k"),Range(Int(1),Int(1),Subscript(Var("log2"),[Var("QAM_MODE")])),Stats([Assign(Subscript(Var("b"),[Colon,DataOp("+",[Int(1),Subscript(Var("mapping"),[Var("k")])])]),"=",Subscript(Var("a"),[Colon,Var("k")]))])),AssignMulti([Var("should_be_log2_qam_mode"),Var("should_be_ii_block_size")],"=",Subscript(Var("size"),[Var("b")])),Assign(Var("a"),"=",Subscript(Var("zeros"),[Var("II_BLOCK_SIZE"),Subscript(Var("log2"),[Var("QAM_MODE")])])),Assign(Var("h_param"),"=",Matrix([[Int(0),Int(63),Int(105),Int(42),Int(21),Int(84)]])),For(VarDef("e"),Range(Int(0),Int(1),DataOp("-",[Subscript(Var("log2"),[Var("QAM_MODE")]),Int(1)])),Stats([For(VarDef("w"),Range(Int(0),Int(1),DataOp("-",[Var("II_BLOCK_SIZE"),Int(1)])),Stats([Assign(Var("h"),"=",Subscript(Var("rem"),[DataOp("+",[Var("w"),Subscript(Var("h_param"),[DataOp("+",[Int(1),Var("e")])])]),Var("II_BLOCK_SIZE")])),Assign(Subscript(Var("a"),[DataOp("+",[Int(1),Var("w")]),DataOp("+",[Int(1),Var("e")])]),"=",Subscript(Var("b"),[DataOp("+",[Int(1),Var("h")]),DataOp("+",[Int(1),Var("e")])]))]))])),Assign(Subscript(Var("y"),[Range(DataOp("+",[Int(1),DataOp("*",[DataOp("-",[Var("i"),Int(1)]),Var("II_BLOCK_SIZE")])]),Int(1),DataOp("*",[Var("i"),Var("II_BLOCK_SIZE")])),Colon]),"=",Var("a"))])),Assign(Var("data_out"),"=",Subscript(Var("zeros"),[Var("OFDM_SYMBOL_SIZE"),Subscript(Var("log2"),[Var("QAM_MODE")])])),For(VarDef("i"),Range(Int(1),Int(1),Var("OFDM_SYMBOL_SIZE")),Stats([Ifs([ElseIf(Var("SEND_EVEN_SYMBOL"),Stats([Assign(Subscript(Var("data_out"),[DataOp("+",[Int(1),Subscript(Var("Hq"),[Var("i")])]),Colon]),"=",Subscript(Var("y"),[Var("i"),Colon]))]))],Else(Stats([Assign(Subscript(Var("data_out"),[Var("i"),Colon]),"=",Subscript(Var("y"),[DataOp("+",[Int(1),Subscript(Var("Hq"),[Var("i")])]),Colon]))])))])),Assign(Var("SEND_EVEN_SYMBOL"),"=",DataOp("!",[Var("SEND_EVEN_SYMBOL")]))])),FunDec(VarDef("map"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    map (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("QAM_MODE"),VarDef("QAM_TABLE"),VarDef("QAM_ROW"),VarDef("QAM_COL"),AssignMulti([Var("symbol_size"),Var("should_be_log_qam_mode")],"=",Subscript(Var("size"),[Var("data_in")])),Assign(Var("data_out"),"=",Subscript(Var("zeros"),[Var("symbol_size"),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Var("symbol_size")),Stats([Assign(Var("bits"),"=",Subscript(Var("data_in"),[Var("i"),Colon])),Assign(Var("bitstring"),"=",String("XXXX")),For(VarDef("j"),Range(Int(1),Int(1),Subscript(Var("log2"),[Var("QAM_MODE")])),Stats([Ifs([ElseIf(DataOp("<=",[Subscript(Var("bits"),[Var("j")]),Float(5.000000000000000e-01)]),Stats([Assign(Subscript(Var("bitstring"),[Var("j")]),"=",String("0"))]))],Else(Stats([Assign(Subscript(Var("bitstring"),[Var("j")]),"=",String("1"))])))])),For(VarDef("r"),Range(Int(1),Int(1),Subscript(Var("sqrt"),[Var("QAM_MODE")])),Stats([For(VarDef("c"),Range(Int(1),Int(1),Subscript(Var("sqrt"),[Var("QAM_MODE")])),Stats([Ifs([ElseIf(DataOp("==",[Subscript(Var("sprintf"),[String("%4.4d"),Subscript(Var("QAM_TABLE"),[Var("r"),Var("c")])]),Var("bitstring")]),Stats([Assign(Var("value"),"=",DataOp("+",[Subscript(Var("QAM_ROW"),[Var("r")]),Subscript(Var("QAM_COL"),[Var("c")])]))]))],())]))])),Assign(Subscript(Var("data_out"),[Var("i")]),"=",Var("value"))]))])),FunDec(VarDef("insert_reference_signals"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    insert_reference_signals (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("SEND_FRAME_INDEX"),VarDef("CARRIER_COUNT"),VarDef("FRAMES_PER_SUPERFRAME"),VarDef("CCP_TABLE"),VarDef("REF_SEQUENCE"),VarDef("TPS_TABLE"),VarDef("ALPHA"),Assign(Var("data_out"),"=",Subscript(Var("zeros"),[Var("CARRIER_COUNT"),Int(1)])),Assign(Var("l"),"=",Var("SEND_FRAME_INDEX")),Assign(Var("Kmin"),"=",Int(0)),Assign(Var("Kmax"),"=",Var("CARRIER_COUNT")),Assign(Var("pilot_set"),"=",Subscript(Var("union"),[Var("CCP_TABLE"),DataOp("+",[DataOp("+",[Var("Kmin"),DataOp("*",[Int(3),Subscript(Var("rem"),[Var("l"),Int(4)])])]),DataOp("*",[Int(12),Range(Int(0),Int(1),DataOp("/",[DataOp("-",[Var("CARRIER_COUNT"),Int(12)]),Int(12)]))])])])),Assign(Var("tps_set"),"=",Var("TPS_TABLE")),Assign(Var("v"),"=",Int(1)),Assign(Var("pilot"),"=",Int(1)),Assign(Var("tps"),"=",Int(1)),For(VarDef("u"),Range(Int(1),Int(1),Var("CARRIER_COUNT")),Stats([Assign(Var("p"),"=",DataOp("+",[Int(1),Subscript(Var("pilot_set"),[Var("pilot")])])),Ifs([ElseIf(DataOp("<=",[Var("tps"),Subscript(Var("length"),[Var("tps_set")])]),Stats([Assign(Var("t"),"=",DataOp("+",[Int(1),Subscript(Var("tps_set"),[Var("tps")])]))]))],Else(Stats([Assign(Var("t"),"=",Int(0))]))),Ifs([ElseIf(DataOp("==",[Var("u"),Var("p")]),Stats([Assign(Subscript(Var("data_out"),[Var("u")]),"=",DataOp("*",[Float(2.666666746139526e+00),DataOp("-",[Float(5.000000000000000e-01),Subscript(Var("REF_SEQUENCE"),[Var("p")])])])),Assign(Var("pilot"),"=",DataOp("+",[Var("pilot"),Int(1)]))])),ElseIf(DataOp("==",[Var("u"),Var("t")]),Stats([Assign(Subscript(Var("data_out"),[Var("u")]),"=",DataOp("*",[Int(2),DataOp("-",[Float(5.000000000000000e-01),Subscript(Var("REF_SEQUENCE"),[Var("p")])])])),Assign(Var("tps"),"=",DataOp("+",[Var("tps"),Int(1)]))]))],Else(Stats([Assign(Subscript(Var("data_out"),[Var("u")]),"=",DataOp("*",[Var("ALPHA"),Subscript(Var("data_in"),[Var("v")])])),Assign(Var("v"),"=",DataOp("+",[Var("v"),Int(1)]))])))])),Assign(Var("SEND_FRAME_INDEX"),"=",Subscript(Var("rem"),[DataOp("+",[Var("SEND_FRAME_INDEX"),Int(1)]),Var("FRAMES_PER_SUPERFRAME")]))])),FunDec(VarDef("union"),[VarDef("a"),VarDef("b")],[VarDef("y")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(2)]),Stats([Subscript(Var("usage"),[String("union(a,b)")])]))],()),Ifs([ElseIf(Subscript(Var("isempty"),[Var("a")]),Stats([Assign(Var("y"),"=",Subscript(Var("create_set"),[Var("b")]))])),ElseIf(Subscript(Var("isempty"),[Var("b")]),Stats([Assign(Var("y"),"=",Subscript(Var("create_set"),[Var("a")]))]))],Else(Stats([AssignMulti([Var("nra"),Var("nca")],"=",Subscript(Var("size"),[Var("a")])),Assign(Var("a"),"=",Subscript(Var("reshape"),[Var("a"),Int(1),DataOp("*",[Var("nra"),Var("nca")])])),AssignMulti([Var("nrb"),Var("ncb")],"=",Subscript(Var("size"),[Var("b")])),Assign(Var("b"),"=",Subscript(Var("reshape"),[Var("b"),Int(1),DataOp("*",[Var("nrb"),Var("ncb")])])),Assign(Var("y"),"=",Subscript(Var("create_set"),[Matrix([[Var("a"),Var("b")]])]))])))])),FunDec(VarDef("create_set"),[VarDef("x")],[VarDef("y")],Stats([Ifs([ElseIf(DataOp("!=",[Var("nargin"),Int(1)]),Stats([Subscript(Var("usage"),[String("create_set(x)")])]))],()),Ifs([ElseIf(Subscript(Var("isempty"),[Var("x")]),Stats([Assign(Var("y"),"=",Matrix([]))]))],Else(Stats([AssignMulti([Var("nrx"),Var("ncx")],"=",Subscript(Var("size"),[Var("x")])),Assign(Var("nelx"),"=",DataOp("*",[Var("nrx"),Var("ncx")])),Assign(Var("y"),"=",Subscript(Var("sort"),[Subscript(Var("reshape"),[Var("x"),Int(1),Var("nelx")])])),Assign(Var("els"),"=",Subscript(Var("find"),[DataOp("!=",[Subscript(Var("y"),[Range(Int(1),Int(1),DataOp("-",[Var("nelx"),Int(1)]))]),Subscript(Var("y"),[Range(Int(2),Int(1),Var("nelx"))])])])),Ifs([ElseIf(Subscript(Var("isempty"),[Var("els")]),Stats([Assign(Var("y"),"=",Subscript(Var("y"),[Int(1)]))]))],Else(Stats([Assign(Var("y"),"=",Subscript(Var("y"),[Matrix([[Int(1),DataOp("+",[Var("els"),Int(1)])]])]))])))])))])),FunDec(VarDef("ofdm_encode"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    ofdm_encode (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("GUARD_INTERVAL_DURATION"),VarDef("OFDM_MODE"),VarDef("CARRIER_COUNT"),Assign(Var("frequency_domain"),"=",Subscript(Var("zeros"),[Var("OFDM_MODE"),Int(1)])),Assign(Subscript(Var("frequency_domain"),[Range(Int(1),Int(1),Var("CARRIER_COUNT"))]),"=",Var("data_in")),Assign(Var("time_domain"),"=",Subscript(Var("ifft"),[Var("frequency_domain")])),Assign(Var("guard_length"),"=",Subscript(Var("ceil"),[DataOp("*",[Var("OFDM_MODE"),Var("GUARD_INTERVAL_DURATION")])])),Assign(Var("data_out"),"=",Matrix([[Subscript(Var("time_domain"),[Range(DataOp("-",[DataOp("+",[Int(1),Var("OFDM_MODE")]),Var("guard_length")]),Int(1),Var("OFDM_MODE"))])],[Var("time_domain")]]))])),FunDec(VarDef("ofdm_decode"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    ofdm_decode (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("GUARD_INTERVAL_DURATION"),VarDef("OFDM_MODE"),VarDef("CARRIER_COUNT"),Assign(Var("guard_length"),"=",Subscript(Var("ceil"),[DataOp("*",[Var("OFDM_MODE"),Var("GUARD_INTERVAL_DURATION")])])),Assign(Var("time_domain"),"=",Subscript(Var("data_in"),[Range(DataOp("+",[Var("guard_length"),Int(1)]),Int(1),DataOp("+",[Var("guard_length"),Var("OFDM_MODE")]))])),Assign(Var("frequency_domain"),"=",Subscript(Var("fft"),[Var("time_domain")])),Assign(Var("data_out"),"=",Var("frequency_domain"))])),FunDec(VarDef("remove_reference_signals"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    remove_reference_signals (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("RECEIVE_FRAME_INDEX"),VarDef("CARRIER_COUNT"),VarDef("FRAMES_PER_SUPERFRAME"),VarDef("CCP_TABLE"),VarDef("REF_SEQUENCE"),VarDef("TPS_TABLE"),VarDef("ALPHA"),VarDef("OFDM_SYMBOL_SIZE"),Assign(Var("data_out"),"=",Subscript(Var("zeros"),[Var("OFDM_SYMBOL_SIZE"),Int(1)])),Assign(Var("l"),"=",Var("RECEIVE_FRAME_INDEX")),Assign(Var("Kmin"),"=",Int(0)),Assign(Var("Kmax"),"=",Var("CARRIER_COUNT")),Assign(Var("pilot_set"),"=",Subscript(Var("union"),[Var("CCP_TABLE"),DataOp("+",[DataOp("+",[Var("Kmin"),DataOp("*",[Int(3),Subscript(Var("rem"),[Var("l"),Int(4)])])]),DataOp("*",[Int(12),Range(Int(0),Int(1),DataOp("/",[DataOp("-",[Var("CARRIER_COUNT"),Int(12)]),Int(12)]))])])])),Assign(Var("tps_set"),"=",Var("TPS_TABLE")),Assign(Var("v"),"=",Int(1)),Assign(Var("pilot"),"=",Int(1)),Assign(Var("tps"),"=",Int(1)),For(VarDef("u"),Range(Int(1),Int(1),Var("CARRIER_COUNT")),Stats([Assign(Var("p"),"=",DataOp("+",[Int(1),Subscript(Var("pilot_set"),[Var("pilot")])])),Ifs([ElseIf(DataOp("<=",[Var("tps"),Subscript(Var("length"),[Var("tps_set")])]),Stats([Assign(Var("t"),"=",DataOp("+",[Int(1),Subscript(Var("tps_set"),[Var("tps")])]))]))],Else(Stats([Assign(Var("t"),"=",Int(0))]))),Ifs([ElseIf(DataOp("==",[Var("u"),Var("p")]),Stats([Assign(Var("pilot"),"=",DataOp("+",[Var("pilot"),Int(1)]))])),ElseIf(DataOp("==",[Var("u"),Var("t")]),Stats([Assign(Var("tps"),"=",DataOp("+",[Var("tps"),Int(1)]))]))],Else(Stats([Assign(Subscript(Var("data_out"),[Var("v")]),"=",DataOp("/",[Subscript(Var("data_in"),[Var("u")]),Var("ALPHA")])),Assign(Var("v"),"=",DataOp("+",[Var("v"),Int(1)]))])))])),Assign(Var("RECEIVE_FRAME_INDEX"),"=",Subscript(Var("rem"),[DataOp("+",[Var("RECEIVE_FRAME_INDEX"),Int(1)]),Var("FRAMES_PER_SUPERFRAME")]))])),FunDec(VarDef("demap"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    demap (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("QAM_MODE"),VarDef("QAM_TABLE"),VarDef("QAM_ROW"),VarDef("QAM_COL"),AssignMulti([Var("symbol_size"),Var("should_be_log_qam_mode")],"=",Subscript(Var("size"),[Var("data_in")])),Assign(Var("data_out"),"=",Subscript(Var("zeros"),[Var("symbol_size"),Subscript(Var("log2"),[Var("QAM_MODE")])])),For(VarDef("i"),Range(Int(1),Int(1),Var("symbol_size")),Stats([Assign(Var("symbol"),"=",Subscript(Var("data_in"),[Var("i"),Colon])),Assign(Var("d"),"=",Var("inf")),Assign(Var("bitstring"),"=",String("XXXX")),For(VarDef("r"),Range(Int(1),Int(1),Subscript(Var("sqrt"),[Var("QAM_MODE")])),Stats([For(VarDef("c"),Range(Int(1),Int(1),Subscript(Var("sqrt"),[Var("QAM_MODE")])),Stats([Assign(Var("d1"),"=",Subscript(Var("abs"),[DataOp("-",[Var("symbol"),DataOp("+",[Subscript(Var("QAM_ROW"),[Var("r")]),Subscript(Var("QAM_COL"),[Var("c")])])])])),Ifs([ElseIf(DataOp("<",[Var("d1"),Var("d")]),Stats([Assign(Var("d"),"=",Var("d1")),Assign(Var("bitstring"),"=",Subscript(Var("sprintf"),[String("%4.4d"),Subscript(Var("QAM_TABLE"),[Var("r"),Var("c")])]))]))],())]))])),Assign(Var("bits"),"=",Subscript(Var("zeros"),[Int(1),Subscript(Var("log2"),[Var("QAM_MODE")])])),For(VarDef("k"),Range(Int(1),Int(1),Subscript(Var("log2"),[Var("QAM_MODE")])),Stats([Ifs([ElseIf(DataOp("==",[Subscript(Var("bitstring"),[Var("k")]),String("1")]),Stats([Assign(Subscript(Var("bits"),[Var("k")]),"=",Int(1))]))],Else(Stats([Assign(Subscript(Var("bits"),[Var("k")]),"=",Int(0))])))])),Assign(Subscript(Var("data_out"),[Var("i"),Colon]),"=",Var("bits"))]))])),FunDec(VarDef("inner_deinterleave"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    inner_deinterleave (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("II_BLOCK_SIZE"),VarDef("OFDM_SYMBOL_SIZE"),VarDef("OFDM_SYMBOL_LENGTH"),VarDef("QAM_MODE"),VarDef("RECEIVE_EVEN_SYMBOL"),VarDef("Hq"),Assign(Var("sblock_size"),"=",DataOp("*",[Var("II_BLOCK_SIZE"),Subscript(Var("log2"),[Var("QAM_MODE")])])),AssignMulti([Var("symbol_size"),Var("should_be_log2_qam_mode")],"=",Subscript(Var("size"),[Var("data_in")])),Assign(Var("num_blocks"),"=",DataOp("/",[Var("symbol_size"),Var("II_BLOCK_SIZE")])),Ifs([ElseIf(DataOp("!=",[Subscript(Var("rem"),[Var("symbol_size"),Var("sblock_size")]),Int(0)]),Stats([Subscript(Var("fprintf"),[String("error: symbol size %d does not match block size %d\n"),Var("symbol_size"),Var("sblock_size")]),Return]))],()),Assign(Var("data_out"),"=",Subscript(Var("zeros"),[Var("OFDM_SYMBOL_LENGTH"),Int(1)])),Assign(Var("y"),"=",Subscript(Var("zeros"),[Var("OFDM_SYMBOL_SIZE"),Subscript(Var("log2"),[Var("QAM_MODE")])])),For(VarDef("i"),Range(Int(1),Int(1),Var("OFDM_SYMBOL_SIZE")),Stats([Ifs([ElseIf(Var("RECEIVE_EVEN_SYMBOL"),Stats([Assign(Subscript(Var("y"),[Var("i"),Colon]),"=",Subscript(Var("data_in"),[DataOp("+",[Int(1),Subscript(Var("Hq"),[Var("i")])]),Colon]))]))],Else(Stats([Assign(Subscript(Var("y"),[DataOp("+",[Int(1),Subscript(Var("Hq"),[Var("i")])]),Colon]),"=",Subscript(Var("data_in"),[Var("i"),Colon]))])))])),For(VarDef("i"),Range(Int(1),Int(1),Var("num_blocks")),Stats([Assign(Var("a"),"=",Subscript(Var("y"),[Range(DataOp("+",[Int(1),DataOp("*",[DataOp("-",[Var("i"),Int(1)]),Var("II_BLOCK_SIZE")])]),Int(1),DataOp("*",[Var("i"),Var("II_BLOCK_SIZE")])),Colon])),Assign(Var("b"),"=",Subscript(Var("zeros"),[Var("II_BLOCK_SIZE"),Subscript(Var("log2"),[Var("QAM_MODE")])])),Assign(Var("h_param"),"=",Matrix([[Int(0),Int(63),Int(105),Int(42),Int(21),Int(84)]])),For(VarDef("e"),Range(Int(0),Int(1),DataOp("-",[Subscript(Var("log2"),[Var("QAM_MODE")]),Int(1)])),Stats([For(VarDef("w"),Range(Int(0),Int(1),DataOp("-",[Var("II_BLOCK_SIZE"),Int(1)])),Stats([Assign(Var("h"),"=",Subscript(Var("rem"),[DataOp("+",[Var("w"),Subscript(Var("h_param"),[DataOp("+",[Int(1),Var("e")])])]),Var("II_BLOCK_SIZE")])),Assign(Subscript(Var("b"),[DataOp("+",[Int(1),Var("h")]),DataOp("+",[Int(1),Var("e")])]),"=",Subscript(Var("a"),[DataOp("+",[Int(1),Var("w")]),DataOp("+",[Int(1),Var("e")])]))]))])),Assign(Var("a"),"=",Subscript(Var("zeros"),[Var("II_BLOCK_SIZE"),Subscript(Var("log2"),[Var("QAM_MODE")])])),Switch(Var("QAM_MODE"),[Case(Int(4),Stats([Assign(Var("mapping"),"=",Matrix([[Int(0),Int(1)]]))])),Case(Int(16),Stats([Assign(Var("mapping"),"=",Matrix([[Int(0),Int(2),Int(1),Int(3)]]))])),Case(Int(64),Stats([Assign(Var("mapping"),"=",Matrix([[Int(0),Int(2),Int(4),Int(1),Int(3),Int(5)]]))]))],Stats([Stats([Subscript(Var("fprintf"),[String("inner interleave: QAM mode %g not implemented.\n"),Var("QAM_MODE")]),Return])])),For(VarDef("k"),Range(Int(1),Int(1),Subscript(Var("log2"),[Var("QAM_MODE")])),Stats([Assign(Subscript(Var("a"),[Colon,Var("k")]),"=",Subscript(Var("b"),[Colon,DataOp("+",[Int(1),Subscript(Var("mapping"),[Var("k")])])]))])),Assign(Subscript(Var("data_out"),[Range(DataOp("+",[Int(1),DataOp("*",[DataOp("-",[Var("i"),Int(1)]),Var("sblock_size")])]),Int(1),DataOp("*",[Var("i"),Var("sblock_size")]))]),"=",Subscript(Var("reshape"),[DataOp("'",[Var("a")]),Var("sblock_size"),Int(1)]))])),Assign(Var("RECEIVE_EVEN_SYMBOL"),"=",DataOp("!",[Var("RECEIVE_EVEN_SYMBOL")]))])),FunDec(VarDef("depuncturing"),[VarDef("data")],[VarDef("x"),VarDef("y")],Stats([Subscript(Var("fprintf"),[String("    depuncturing (%d)\n"),Subscript(Var("length"),[Var("data")])]),VarDef("PUNCTURING_MODE"),Switch(Var("PUNCTURING_MODE"),[Case(Float(5.000000000000000e-01),Stats([Assign(Var("x"),"=",Subscript(Var("zeros"),[DataOp("/",[Subscript(Var("length"),[Var("data")]),Int(2)]),Int(1)])),Assign(Var("y"),"=",Subscript(Var("zeros"),[DataOp("/",[Subscript(Var("length"),[Var("data")]),Int(2)]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("x")])),Stats([Assign(Subscript(Var("x"),[Var("i")]),"=",Subscript(Var("data"),[DataOp("+",[DataOp("*",[Int(2),DataOp("-",[Var("i"),Int(1)])]),Int(1)])])),Assign(Subscript(Var("y"),[Var("i")]),"=",Subscript(Var("data"),[DataOp("+",[DataOp("*",[Int(2),DataOp("-",[Var("i"),Int(1)])]),Int(2)])]))]))])),Case(Float(6.666666865348816e-01),Stats([Assign(Var("x"),"=",Subscript(Var("zeros"),[DataOp("/",[DataOp("*",[Int(2),Subscript(Var("length"),[Var("data")])]),Int(3)]),Int(1)])),Assign(Var("y"),"=",Subscript(Var("zeros"),[DataOp("/",[DataOp("*",[Int(2),Subscript(Var("length"),[Var("data")])]),Int(3)]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(2),Subscript(Var("length"),[Var("x")])),Stats([Assign(Subscript(Var("x"),[DataOp("+",[Var("i"),Int(0)])]),"=",Subscript(Var("data"),[DataOp("+",[DataOp("/",[DataOp("*",[Int(3),DataOp("-",[Var("i"),Int(1)])]),Int(2)]),Int(1)])])),Assign(Subscript(Var("x"),[DataOp("+",[Var("i"),Int(1)])]),"=",Float(5.000000000000000e-01)),Assign(Subscript(Var("y"),[DataOp("+",[Var("i"),Int(0)])]),"=",Subscript(Var("data"),[DataOp("+",[DataOp("/",[DataOp("*",[Int(3),DataOp("-",[Var("i"),Int(1)])]),Int(2)]),Int(2)])])),Assign(Subscript(Var("y"),[DataOp("+",[Var("i"),Int(1)])]),"=",Subscript(Var("data"),[DataOp("+",[DataOp("/",[DataOp("*",[Int(3),DataOp("-",[Var("i"),Int(1)])]),Int(2)]),Int(3)])]))]))]))],Stats([Stats([Subscript(Var("fprintf"),[String("puncturing mode %g not implemented.\n"),Var("PUNCTURING_MODE")]),Return])]))])),FunDec(VarDef("convolutional_decode"),[VarDef("x"),VarDef("y")],[VarDef("data")],Stats([Subscript(Var("fprintf"),[String("    convolutional_decode (%d)\n"),Subscript(Var("length"),[Var("x")])]),VarDef("INIT_CONV_REGISTER"),VarDef("dvbt_receive_current_packet"),VarDef("dvbt_receive_conv_register"),Assign(Var("data"),"=",Subscript(Var("zeros"),[Subscript(Var("length"),[Var("x")]),Int(1)])),For(VarDef("k"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("data")])),Stats([Assign(Var("data_x"),"=",Subscript(Var("x"),[Var("k")])),For(VarDef("v"),Matrix([[Int(1),Int(2),Int(3),Int(6)]]),Stats([Assign(Var("data_x"),"=",Subscript(Var("soft_xor"),[Var("data_x"),Subscript(Var("dvbt_receive_conv_register"),[Var("v")])]))])),Assign(Var("data_y"),"=",Subscript(Var("y"),[Var("k")])),For(VarDef("v"),Matrix([[Int(2),Int(3),Int(5),Int(6)]]),Stats([Assign(Var("data_y"),"=",Subscript(Var("soft_xor"),[Var("data_y"),Subscript(Var("dvbt_receive_conv_register"),[Var("v")])]))])),Ifs([ElseIf(DataOp("&",[DataOp("==",[Var("data_x"),Float(5.000000000000000e-01)]),DataOp("==",[Var("data_y"),Float(5.000000000000000e-01)])]),Stats([Subscript(Var("fprintf"),[String("warning: undefined symbol %d\n"),Var("k")])]))],()),Ifs([ElseIf(DataOp("|",[DataOp("&",[DataOp("<",[Var("data_x"),Float(5.000000000000000e-01)]),DataOp(">",[Var("data_y"),Float(5.000000000000000e-01)])]),DataOp("&",[DataOp(">",[Var("data_x"),Float(5.000000000000000e-01)]),DataOp("<",[Var("data_y"),Float(5.000000000000000e-01)])])]),Stats([Subscript(Var("fprintf"),[String("warning: contradicting symbol %d\n"),Var("k")])]))],()),Ifs([ElseIf(DataOp("|",[DataOp("<",[Var("data_x"),Float(5.000000000000000e-01)]),DataOp("<",[Var("data_y"),Float(5.000000000000000e-01)])]),Stats([Assign(Subscript(Var("data"),[Var("k")]),"=",Int(0))])),ElseIf(DataOp("|",[DataOp(">",[Var("data_x"),Float(5.000000000000000e-01)]),DataOp(">",[Var("data_y"),Float(5.000000000000000e-01)])]),Stats([Assign(Subscript(Var("data"),[Var("k")]),"=",Int(1))]))],Else(Stats([Subscript(Var("fprintf"),[String("error: internal error at symbol %d\n"),Var("k")])]))),Assign(Var("dvbt_receive_conv_register"),"=",Matrix([[Subscript(Var("data"),[Var("k")]),Subscript(Var("dvbt_receive_conv_register"),[Range(Int(2),Int(1),Int(6))])]]))]))])),FunDec(VarDef("soft_xor"),[VarDef("a"),VarDef("b")],[VarDef("x")],Stats([Ifs([ElseIf(DataOp("<",[Var("b"),Float(5.000000000000000e-01)]),Stats([Assign(Var("x"),"=",Var("a"))])),ElseIf(DataOp("==",[Var("a"),Float(5.000000000000000e-01)]),Stats([Assign(Var("x"),"=",Float(5.000000000000000e-01))])),ElseIf(DataOp(">",[Var("b"),Float(5.000000000000000e-01)]),Stats([Assign(Var("x"),"=",DataOp("-",[Int(1),Var("a")]))]))],())])),FunDec(VarDef("byte_from_bit_vector"),[VarDef("data_in")],[VarDef("data_out")],Stats([Assign(Var("data_out"),"=",Subscript(Var("zeros"),[Subscript(Var("ceil"),[DataOp("/",[Subscript(Var("length"),[Var("data_in")]),Int(8)])]),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Subscript(Var("length"),[Var("data_out")])),Stats([Assign(Var("data_byte"),"=",Int(0)),For(VarDef("j"),Range(Int(1),Int(1),Int(8)),Stats([Ifs([ElseIf(DataOp("<=",[Subscript(Var("data_in"),[DataOp("+",[DataOp("*",[Int(8),DataOp("-",[Var("i"),Int(1)])]),Var("j")])]),Float(5.000000000000000e-01)]),Stats([Assign(Var("data_bit"),"=",Int(0))]))],Else(Stats([Assign(Var("data_bit"),"=",Int(1))]))),Assign(Var("data_byte"),"=",DataOp("+",[DataOp("*",[Int(2),Var("data_byte")]),Var("data_bit")]))])),Assign(Subscript(Var("data_out"),[Var("i")]),"=",Var("data_byte"))]))])),FunDec(VarDef("outer_deinterleave"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    outer_deinterleave (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("PACKET_LENGTH"),VarDef("RS_PARITY_BYTES"),VarDef("OI_I"),VarDef("OI_M"),VarDef("RECEIVE_OI_STATE"),VarDef("RECEIVE_OI_POINTER"),AssignMulti([Var("num_bytes"),Var("should_be_one")],"=",Subscript(Var("size"),[Var("data_in")])),Assign(Var("data_out"),"=",Subscript(Var("zeros"),[Var("num_bytes"),Int(1)])),For(VarDef("i"),Range(Int(1),Int(1),Var("num_bytes")),Stats([Assign(Var("byte"),"=",Subscript(Var("data_in"),[Var("i")])),Assign(Var("k"),"=",Var("RECEIVE_OI_POINTER")),Assign(Var("q"),"=",DataOp("*",[DataOp("-",[DataOp("-",[Var("OI_I"),Var("k")]),Int(1)]),Var("OI_M")])),Assign(Subscript(Var("RECEIVE_OI_STATE"),[DataOp("+",[Int(1),Var("k")]),Range(Int(1),Int(1),DataOp("+",[Var("q"),Int(1)]))]),"=",Matrix([[Var("byte"),Subscript(Var("RECEIVE_OI_STATE"),[DataOp("+",[Int(1),Var("k")]),Range(Int(1),Int(1),Var("q"))])]])),Assign(Subscript(Var("data_out"),[Var("i")]),"=",Subscript(Var("RECEIVE_OI_STATE"),[DataOp("+",[Int(1),Var("k")]),DataOp("+",[Var("q"),Int(1)])])),Assign(Var("RECEIVE_OI_POINTER"),"=",Subscript(Var("rem"),[DataOp("+",[Var("RECEIVE_OI_POINTER"),Int(1)]),Var("OI_I")]))]))])),FunDec(VarDef("rs_decode"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    rs_decode (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("PACKET_LENGTH"),VarDef("RS_PARITY_BYTES"),Ifs([ElseIf(DataOp("!=",[Subscript(Var("length"),[Var("data_in")]),DataOp("+",[Var("PACKET_LENGTH"),Var("RS_PARITY_BYTES")])]),Stats([Subscript(Var("fprintf"),[String("error: rs_decode: packet size %d is not expected %d.\n"),Subscript(Var("length"),[Var("data_in")]),DataOp("+",[Var("PACKET_LENGTH"),Var("RS_PARITY_BYTES")])]),Return]))],()),Ifs([ElseIf(DataOp("!=",[Subscript(Var("data_in"),[Range(DataOp("+",[Var("PACKET_LENGTH"),Int(1)]),Int(1),DataOp("+",[Var("PACKET_LENGTH"),Var("RS_PARITY_BYTES")]))]),Subscript(Var("zeros"),[Var("RS_PARITY_BYTES"),Int(1)])]),Stats([Subscript(Var("fprintf"),[String("error: parity\n")])]))],()),Assign(Var("data_out"),"=",Subscript(Var("data_in"),[Range(Int(1),Int(1),Var("PACKET_LENGTH"))]))])),FunDec(VarDef("remove_sync_and_unscramble"),[VarDef("data_in")],[VarDef("data_out")],Stats([Subscript(Var("fprintf"),[String("    remove_sync_and_unscramble (%d)\n"),Subscript(Var("length"),[Var("data_in")])]),VarDef("PACKET_LENGTH"),VarDef("NET_PACKET_LENGTH"),VarDef("PACKETS_PER_PRBS_PERIOD"),VarDef("SYNC_BYTE_VALUE"),VarDef("INV_SYNC_BYTE_VALUE"),VarDef("INIT_PRBS_REGISTER"),VarDef("dvbt_receive_current_packet"),VarDef("dvbt_receive_prbs_register"),Ifs([ElseIf(DataOp("<",[Var("dvbt_receive_current_packet"),Int(0)]),Stats([Assign(Var("data_out"),"=",Subscript(Var("zeros"),[Var("NET_PACKET_LENGTH"),Int(1)])),Assign(Var("dvbt_receive_current_packet"),"=",DataOp("+",[Var("dvbt_receive_current_packet"),Int(1)]))]))],Else(Stats([Ifs([ElseIf(DataOp("==",[Var("dvbt_receive_current_packet"),Int(0)]),Stats([Assign(Var("dvbt_receive_prbs_register"),"=",Var("INIT_PRBS_REGISTER")),Assign(Var("sync_byte"),"=",Var("INV_SYNC_BYTE_VALUE"))]))],Else(Stats([Assign(Var("sync_byte"),"=",Var("SYNC_BYTE_VALUE"))]))),Ifs([ElseIf(DataOp("!=",[Var("sync_byte"),Subscript(Var("data_in"),[Int(1)])]),Stats([Subscript(Var("fprintf"),[String("warning: actual sync byte (%2.2x) does not match\n"),Subscript(Var("data_in"),[Int(1)])]),Subscript(Var("fprintf"),[String("warning: expected sync byte (%2.2x).\n"),Var("sync_byte")]),Subscript(Var("fprintf"),[String("warning: (current_packet=%d)\n"),Var("dvbt_receive_current_packet")])]))],()),AssignMulti([Var("prbs"),Var("dvbt_receive_prbs_register")],"=",Subscript(Var("prbs_sequence"),[Var("NET_PACKET_LENGTH"),Var("dvbt_receive_prbs_register")])),Assign(Var("data_out"),"=",Subscript(Var("byte_xor"),[Subscript(Var("data_in"),[Range(Int(2),Int(1),Var("PACKET_LENGTH"))]),Var("prbs")])),Assign(Var("dvbt_receive_current_packet"),"=",Subscript(Var("rem"),[DataOp("+",[Var("dvbt_receive_current_packet"),Int(1)]),Var("PACKETS_PER_PRBS_PERIOD")]))])))]))])