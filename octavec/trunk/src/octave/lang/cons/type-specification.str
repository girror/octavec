module type-specification
signature
  constructors
                        : String -> Id
                        : String -> IntConst
    FunctionDeclaration : Id * List(Id) * List(VarTyped) -> FunctionDeclaration
    Decls               : List(FunctionDeclaration) -> UserDecls
    CellTyped           : List(IntConst) * TypeShape -> CellTyped
    VarTyped            : Id * TypeShape -> VarTyped
    Var                 : Id -> Exp
    Int                 : IntConst -> Exp
    RANGE               : Type * Exp -> TypeShape
    UNIVERSAL           : TypeShape
    RECORD              : List(VarTyped) -> TypeShape
    CELL                : List(CellTyped) -> TypeShape
    FCNHANDLE           : TypeShape
    ONE_MANY            : TypeShape -> TypeShape
    MANY                : TypeShape -> TypeShape
    RANGE               : Exp -> TypeShape
    RANGE               : TypeShape
    MATRIX              : Type * List(Exp) -> TypeShape
    MATRIX              : Type -> TypeShape
    STRING              : Exp -> TypeShape
    STRING              : TypeShape
    SCALAR              : Type -> TypeShape
    UNION_TYPES         : List(TypeShape) -> TypeShape
    STREAMOFF           : Type
    NUMERIC             : Type
    FCNHANDLE           : Type
    CHAR                : Type
    COMPLEX             : Type
    FLOAT               : Type
    INT                 : Type
    BOOL                : Type
    ANY_TYPE            : Type
    FunctionSig         : Id * List(TypeShape) * List(TypeShape) -> FunctionType
    MappingFuncs        : List(FunctionType) -> MappingFuncs
    LibFuncs            : List(FunctionType) -> FunctionSignatures
    Variables           : List(VarTyped) -> Variables
    Constants           : List(VarTyped) -> Constants
    ProgDecls           : List(Constants) * List(Variables) * List(FunctionSignatures) * List(MappingFuncs) * List(UserDecls) -> ProgDeclaration
signature
  constructors
    Some : a -> Option(a)
    None : Option(a)
signature
  constructors
    Cons : a * List(a) -> List(a)
    Nil  : List(a)
    Conc : List(a) * List(a) -> List(a)
